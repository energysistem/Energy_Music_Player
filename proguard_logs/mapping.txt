android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.a:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.b:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.c:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.d:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.e:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.f:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.a:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.b:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.e:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.f:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.g:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.h:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.i:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.j:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> a
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.k:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.m:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.n:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> b
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void instantiateChildFragmentManager() -> c
    void performCreate(android.os.Bundle) -> b
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> c
    void performStart() -> d
    void performResume() -> e
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> f
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> d
    void performPause() -> g
    void performStop() -> h
    void performReallyStop() -> i
    void performDestroyView() -> j
    void performDestroy() -> k
android.support.v4.app.Fragment$1 -> android.support.v4.app.o:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.p:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.r:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.s:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.t:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.u:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.v:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void makeActive(android.support.v4.app.Fragment) -> b
    void makeInactive(android.support.v4.app.Fragment) -> c
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void checkStateLoss() -> e
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> b
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> c
    void saveFragmentViewState(android.support.v4.app.Fragment) -> d
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> e
    android.os.Parcelable saveAllState() -> d
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.x:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.y:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.z:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.aa:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ab:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ac:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ad:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.ae:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.af:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ag:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> a
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> l
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ah:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ai:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aj:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ak:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.al:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.am:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.an:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ao:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ap:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.aq:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ar:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.as:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.at:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.au:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.av:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.aw:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ax:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> a
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> a
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.String mCallingPackage -> c
    android.content.ComponentName mCallingActivity -> d
    java.util.ArrayList mStreams -> e
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ay:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.az:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ba:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.bb:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.bc:
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.bd:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.be:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.bf:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.bg:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.bh:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.bi:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> a
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.a:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.b:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.d:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.e:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.f:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.g:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.i:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.j:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.k:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.l:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.m:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.n:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.o:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.p:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> a
    java.lang.Object postResult(java.lang.Object) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void finish(java.lang.Object) -> c
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.q:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.r:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.s:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.t:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.u:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.v:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> a
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.w:
    java.lang.Object[] mParams -> b
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.a:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.b:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.c:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.d:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.e:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.f:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> a
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.a:
    java.lang.Object mDisplayManagerObj -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.b:
    android.view.WindowManager mWindowManager -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.c:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> a
    android.support.v4.media.TransportPerformer mCallbacks -> b
    android.media.AudioManager mAudioManager -> c
    android.view.View mView -> d
    java.lang.Object mDispatcherState -> e
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> f
    java.util.ArrayList mListeners -> g
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> h
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> i
    boolean isMediaKey(int) -> a
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> a
    void reportPlayingChanged() -> b
    void reportTransportControlsChanged() -> c
    void pushControllerState() -> d
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.a:
    android.support.v4.media.TransportMediator this$0 -> a
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.b:
    android.support.v4.media.TransportMediator this$0 -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.c:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.d:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.View mTargetView -> c
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> d
    java.lang.String mReceiverAction -> e
    android.content.IntentFilter mReceiverFilter -> f
    android.content.Intent mIntent -> g
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> h
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> i
    android.content.BroadcastReceiver mMediaButtonReceiver -> j
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> k
    android.app.PendingIntent mPendingIntent -> l
    android.media.RemoteControlClient mRemoteControl -> m
    boolean mFocused -> n
    int mPlayState -> o
    boolean mAudioFocused -> p
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void takeAudioFocus() -> a
    void startPlaying() -> startPlaying
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> b
    void loseFocus() -> c
    void windowDetached() -> d
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.e:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.f:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.g:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.h:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.a:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.b:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.c:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.d:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.e:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.f:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.g:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.h:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.i:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.j:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.k:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.l:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.m:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.n:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.o:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.a:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.d:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> a
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.a:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.b:
    android.support.v4.print.PrintHelperKitkat printHelper -> a
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.c:
    int mScaleMode -> a
    int mColorMode -> b
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.d:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    android.content.Context mContext -> a
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> b
    int mColorMode -> c
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> a
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> a
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.e:
    java.lang.String val$jobName -> a
    android.graphics.Bitmap val$bitmap -> b
    int val$fittingMode -> c
    android.support.v4.print.PrintHelperKitkat this$0 -> d
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> a
    java.lang.String LRM_STRING -> b
    java.lang.String RLM_STRING -> c
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> d
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> e
    boolean mIsRtlContext -> f
    int mFlags -> g
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> h
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> a
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> b
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> b
    int getExitDir(java.lang.String) -> a
    int getEntryDir(java.lang.String) -> b
    boolean access$000(java.util.Locale) -> a
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> a
    android.support.v4.text.BidiFormatter access$200() -> b
    android.support.v4.text.BidiFormatter access$300() -> c
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.a:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> a
    int mFlags -> b
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    void initialize(boolean) -> a
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> b
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.b:
    byte[] DIR_TYPE_CACHE -> a
    java.lang.String text -> b
    boolean isHtml -> c
    int length -> d
    int charIndex -> e
    char lastChar -> f
    int getEntryDir() -> a
    int getExitDir() -> b
    byte getCachedDirectionality(char) -> a
    byte dirTypeForward() -> c
    byte dirTypeBackward() -> d
    byte skipTagForward() -> e
    byte skipTagBackward() -> f
    byte skipEntityForward() -> g
    byte skipEntityBackward() -> h
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.c:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.d:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.e:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.f:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int isRtlText(int) -> c
    int isRtlTextOrFormat(int) -> d
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.g:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.h:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.i:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.j:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.k:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.l:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.m:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> a
    java.lang.String HEBR_SCRIPT_SUBTAG -> b
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> a
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.a:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.ContainerHelpers -> android.support.v4.util.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> a
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.c:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.d:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.e:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.f:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.g:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> a
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.f:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.h:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.i:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.j:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void init(android.content.Context) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> a
    void cancelTaps() -> b
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> c
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.k:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.l:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.m:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.n:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.q:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.r:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.s:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.t:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.u:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.v:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.w:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.x:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.y:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.z:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.aa:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ab:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.ac:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.ad:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.ae:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.af:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.ag:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.ah:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.ai:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aj:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ak:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.al:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.am:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.an:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ao:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ap:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.aq:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ar:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.as:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.at:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.au:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.av:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> a
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.aw:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ax:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ay:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.az:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ba:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.bb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.bc:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.bd:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.be:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bf:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.bg:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bh:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bi:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.bj:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bk:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bm:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bn:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bo:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bp:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bq:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.br:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bs:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bt:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bu:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bv:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bw:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bx:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.by:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bz:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ca:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.cb:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.cc:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.cd:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ce:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.cf:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.cg:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ch:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ci:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.cj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ck:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> a
    boolean needsMeasure -> b
    int position -> c
    int childIndex -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cn:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.co:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cp:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.cq:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.cr:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.cs:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.a:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.b:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.c:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.d:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.e:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.f:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.g:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.h:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.i:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.j:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.k:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.l:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.m:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.n:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.o:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.p:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.q:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.r:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.s:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.t:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.u:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.v:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.w:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.x:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.y:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.z:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.aa:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.ab:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.ac:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.ad:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.ae:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.af:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.ag:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.ah:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.ai:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.aj:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.ak:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.al:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.am:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.an:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.ao:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> a
    void startAnimating() -> b
    void requestStop() -> c
    float computeTargetVelocity(int,float,float,float) -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> a
    float constrainEdgeValue(float,float) -> a
    int constrain(int,int,int) -> b
    float constrain(float,float,float) -> b
    void cancelTargetTouch() -> d
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> a
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> c
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> b
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> c
    void access$600(android.support.v4.widget.AutoScrollHelper) -> f
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> g
    int access$800(int,int,int) -> a
    float access$900(float,float,float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.a:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.b:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> a
    float interpolateValue(float) -> a
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.c:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.d:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.e:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.f:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.g:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.h:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.i:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.j:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> a
    void dispatchOnDrawerOpened(android.view.View) -> b
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> c
    int getDrawerViewAbsoluteGravity(android.view.View) -> d
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> g
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> e
    boolean isDrawerView(android.view.View) -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    void cancelChildViewTouch() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.k:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> a
    boolean isPeeking -> b
    boolean knownOpen -> c
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.l:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.m:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> a
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> b
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.n:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.o:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.p:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.q:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.r:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> b
    android.graphics.Rect mTempScreenRect -> c
    android.graphics.Rect mTempParentRect -> d
    android.graphics.Rect mTempVisibleRect -> e
    int[] mTempGlobalRect -> f
    android.view.accessibility.AccessibilityManager mManager -> g
    android.view.View mView -> h
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> i
    int mFocusedVirtualViewId -> j
    int mHoveredVirtualViewId -> k
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> a
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> a
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> b
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> d
    boolean performAction(int,int,android.os.Bundle) -> a
    boolean performActionForHost(int,android.os.Bundle) -> a
    boolean performActionForChild(int,int,android.os.Bundle) -> b
    boolean manageFocusForChild(int,int,android.os.Bundle) -> c
    boolean intersectVisibleToUser(android.graphics.Rect) -> a
    boolean isAccessibilityFocused(int) -> e
    boolean requestAccessibilityFocus(int) -> f
    boolean clearAccessibilityFocus(int) -> g
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> a
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> a
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.s:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.t:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> a
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.u:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.v:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.w:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.x:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> a
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.y:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.z:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.aa:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.ab:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> a
    int mDropDownLayout -> b
    android.view.LayoutInflater mInflater -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ac:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ad:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ae:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.af:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ag:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ah:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.ai:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.aj:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.ak:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.al:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.am:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.an:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.ao:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.ap:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.aq:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.ar:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.as:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> b
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> c
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> d
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.at:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.au:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.av:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.aw:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> d
    float weight -> weight
    boolean slideable -> a
    boolean dimWhenOffset -> b
    android.graphics.Paint dimPaint -> c
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ax:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.ay:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.az:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.ba:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.bb:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> a
    void clearMotionHistory(int) -> b
    void ensureMotionHistorySizeForId(int) -> c
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> a
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> a
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> b
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> a
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.bc:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.bd:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.androidquery.AQuery -> com.androidquery.AQuery:
com.androidquery.AbstractAQuery -> com.androidquery.AbstractAQuery:
    android.view.View root -> a
    android.app.Activity act -> b
    android.content.Context context -> c
    android.view.View view -> view
    java.lang.Object progress -> progress
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.Transformer trans -> d
    java.lang.reflect.Constructor constructor -> e
    java.lang.Class[] ON_CLICK_SIG -> f
    java.lang.Class[] ON_ITEM_SIG -> g
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> h
    java.lang.Class[] TEXT_CHANGE_SIG -> i
    java.lang.Class[] PENDING_TRANSITION_SIG -> j
    java.lang.Class[] OVER_SCROLL_SIG -> k
    java.lang.Class[] LAYER_TYPE_SIG -> l
    java.util.WeakHashMap dialogs -> m
    android.view.LayoutInflater inflater -> n
    com.androidquery.AbstractAQuery create(android.view.View) -> create
    java.lang.reflect.Constructor getConstructor() -> a
    android.view.View findView(int) -> a
    android.view.View findView(int[]) -> a
    com.androidquery.AbstractAQuery find(int) -> find
    com.androidquery.AbstractAQuery parent(int) -> parent
    com.androidquery.AbstractAQuery recycle(android.view.View) -> recycle
    com.androidquery.AbstractAQuery self() -> b
    android.view.View getView() -> getView
    com.androidquery.AbstractAQuery id(int) -> id
    com.androidquery.AbstractAQuery id(android.view.View) -> id
    com.androidquery.AbstractAQuery id(int[]) -> id
    com.androidquery.AbstractAQuery progress(int) -> progress
    com.androidquery.AbstractAQuery progress(android.view.View) -> progress
    com.androidquery.AbstractAQuery progress(android.app.Dialog) -> progress
    com.androidquery.AbstractAQuery auth(com.androidquery.auth.AccountHandle) -> auth
    com.androidquery.AbstractAQuery transformer(com.androidquery.callback.Transformer) -> transformer
    com.androidquery.AbstractAQuery rating(float) -> rating
    com.androidquery.AbstractAQuery text(int) -> text
    com.androidquery.AbstractAQuery text(int,java.lang.Object[]) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence,boolean) -> text
    com.androidquery.AbstractAQuery text(android.text.Spanned) -> text
    com.androidquery.AbstractAQuery textColor(int) -> textColor
    com.androidquery.AbstractAQuery adapter(android.widget.Adapter) -> adapter
    com.androidquery.AbstractAQuery adapter(android.widget.ExpandableListAdapter) -> adapter
    com.androidquery.AbstractAQuery image(int) -> image
    com.androidquery.AbstractAQuery image(android.graphics.drawable.Drawable) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap) -> image
    com.androidquery.AbstractAQuery image(java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> image
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.io.File,int) -> image
    com.androidquery.AbstractAQuery image(java.io.File,boolean,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap,float) -> image
    com.androidquery.AbstractAQuery tag(java.lang.Object) -> tag
    com.androidquery.AbstractAQuery tag(int,java.lang.Object) -> tag
    com.androidquery.AbstractAQuery transparent(boolean) -> transparent
    com.androidquery.AbstractAQuery enabled(boolean) -> enabled
    com.androidquery.AbstractAQuery checked(boolean) -> checked
    boolean isChecked() -> isChecked
    com.androidquery.AbstractAQuery clickable(boolean) -> clickable
    com.androidquery.AbstractAQuery gone() -> gone
    com.androidquery.AbstractAQuery invisible() -> invisible
    com.androidquery.AbstractAQuery visible() -> visible
    com.androidquery.AbstractAQuery background(int) -> background
    com.androidquery.AbstractAQuery backgroundColor(int) -> backgroundColor
    com.androidquery.AbstractAQuery dataChanged() -> dataChanged
    boolean isExist() -> isExist
    java.lang.Object getTag() -> getTag
    java.lang.Object getTag(int) -> getTag
    android.widget.ImageView getImageView() -> getImageView
    android.widget.Gallery getGallery() -> getGallery
    android.widget.TextView getTextView() -> getTextView
    android.widget.EditText getEditText() -> getEditText
    android.widget.ProgressBar getProgressBar() -> getProgressBar
    android.widget.Button getButton() -> getButton
    android.widget.CheckBox getCheckBox() -> getCheckBox
    android.widget.ListView getListView() -> getListView
    android.widget.ExpandableListView getExpandableListView() -> getExpandableListView
    android.widget.GridView getGridView() -> getGridView
    android.widget.RatingBar getRatingBar() -> getRatingBar
    android.webkit.WebView getWebView() -> getWebView
    android.widget.Spinner getSpinner() -> getSpinner
    android.text.Editable getEditable() -> getEditable
    java.lang.CharSequence getText() -> getText
    java.lang.Object getSelectedItem() -> getSelectedItem
    com.androidquery.AbstractAQuery clicked(java.lang.Object,java.lang.String) -> clicked
    com.androidquery.AbstractAQuery clicked(android.view.View$OnClickListener) -> clicked
    com.androidquery.AbstractAQuery longClicked(java.lang.Object,java.lang.String) -> longClicked
    com.androidquery.AbstractAQuery longClicked(android.view.View$OnLongClickListener) -> longClicked
    com.androidquery.AbstractAQuery itemClicked(java.lang.Object,java.lang.String) -> itemClicked
    com.androidquery.AbstractAQuery itemClicked(android.widget.AdapterView$OnItemClickListener) -> itemClicked
    com.androidquery.AbstractAQuery itemSelected(java.lang.Object,java.lang.String) -> itemSelected
    com.androidquery.AbstractAQuery itemSelected(android.widget.AdapterView$OnItemSelectedListener) -> itemSelected
    com.androidquery.AbstractAQuery setSelection(int) -> setSelection
    com.androidquery.AbstractAQuery scrolledBottom(java.lang.Object,java.lang.String) -> scrolledBottom
    com.androidquery.util.Common setScrollListener() -> c
    com.androidquery.AbstractAQuery scrolled(android.widget.AbsListView$OnScrollListener) -> scrolled
    com.androidquery.AbstractAQuery textChanged(java.lang.Object,java.lang.String) -> textChanged
    com.androidquery.AbstractAQuery overridePendingTransition5(int,int) -> overridePendingTransition5
    com.androidquery.AbstractAQuery setOverScrollMode9(int) -> setOverScrollMode9
    com.androidquery.AbstractAQuery setLayerType11(int,android.graphics.Paint) -> setLayerType11
    java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    com.androidquery.AbstractAQuery hardwareAccelerated11() -> hardwareAccelerated11
    com.androidquery.AbstractAQuery clear() -> clear
    com.androidquery.AbstractAQuery margin(float,float,float,float) -> margin
    com.androidquery.AbstractAQuery width(int) -> width
    com.androidquery.AbstractAQuery height(int) -> height
    com.androidquery.AbstractAQuery width(int,boolean) -> width
    com.androidquery.AbstractAQuery height(int,boolean) -> height
    void size(boolean,int,boolean) -> a
    android.content.Context getContext() -> getContext
    com.androidquery.AbstractAQuery ajax(com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> invoke
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery sync(com.androidquery.callback.AjaxCallback) -> sync
    com.androidquery.AbstractAQuery cache(java.lang.String,long) -> cache
    com.androidquery.AbstractAQuery ajaxCancel() -> ajaxCancel
    java.io.File getCachedFile(java.lang.String) -> getCachedFile
    com.androidquery.AbstractAQuery invalidate(java.lang.String) -> invalidate
    android.graphics.Bitmap getCachedImage(java.lang.String) -> getCachedImage
    android.graphics.Bitmap getCachedImage(java.lang.String,int) -> getCachedImage
    android.graphics.Bitmap getCachedImage(int) -> getCachedImage
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelay(int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    java.io.File makeSharedFile(java.lang.String,java.lang.String) -> makeSharedFile
    com.androidquery.AbstractAQuery animate(int) -> animate
    com.androidquery.AbstractAQuery animate(int,android.view.animation.Animation$AnimationListener) -> animate
    com.androidquery.AbstractAQuery animate(android.view.animation.Animation) -> animate
    com.androidquery.AbstractAQuery click() -> click
    com.androidquery.AbstractAQuery longClick() -> longClick
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> show
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> dismiss
    com.androidquery.AbstractAQuery dismiss() -> dismiss
    com.androidquery.AbstractAQuery webImage(java.lang.String) -> webImage
    com.androidquery.AbstractAQuery webImage(java.lang.String,boolean,boolean,int) -> webImage
    android.view.View inflate(android.view.View,int,android.view.ViewGroup) -> inflate
    com.androidquery.AbstractAQuery expand(int,boolean) -> expand
    com.androidquery.AbstractAQuery expand(boolean) -> expand
com.androidquery.auth.AccountHandle -> com.androidquery.auth.AccountHandle:
    java.util.LinkedHashSet callbacks -> a
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> auth
    boolean authenticated() -> authenticated
    void success(android.content.Context) -> success
    void failure(android.content.Context,int,java.lang.String) -> failure
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    void unauth() -> unauth
com.androidquery.auth.GoogleHandle -> com.androidquery.auth.GoogleHandle:
    android.accounts.AccountManager am -> a
    android.accounts.Account acc -> b
    java.lang.String type -> c
    android.app.Activity act -> d
    java.lang.String email -> e
    android.accounts.Account[] accs -> f
    java.lang.String token -> g
    void auth() -> auth
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getType() -> getType
    void accountDialog() -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void setActiveAccount(android.content.Context,java.lang.String) -> setActiveAccount
    java.lang.String getActiveAccount(android.content.Context) -> getActiveAccount
    void auth(android.accounts.Account) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    android.accounts.AccountManager access$0(com.androidquery.auth.GoogleHandle) -> a
    android.accounts.Account access$1(com.androidquery.auth.GoogleHandle) -> b
    java.lang.String access$2(com.androidquery.auth.GoogleHandle) -> c
    android.app.Activity access$3(com.androidquery.auth.GoogleHandle) -> d
    void access$4(com.androidquery.auth.GoogleHandle,java.lang.String) -> a
com.androidquery.auth.GoogleHandle$Task -> com.androidquery.auth.a:
    com.androidquery.auth.GoogleHandle this$0 -> a
    android.os.Bundle doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.os.Bundle) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.callback.AbstractAjaxCallback -> com.androidquery.callback.AbstractAjaxCallback:
    int NET_TIMEOUT -> a
    java.lang.String AGENT -> b
    int NETWORK_POOL -> c
    boolean GZIP -> d
    java.lang.Class type -> e
    java.lang.ref.Reference whandler -> f
    java.lang.Object handler -> g
    java.lang.String callback -> h
    java.lang.ref.WeakReference progress -> i
    java.lang.String url -> j
    java.util.Map params -> k
    java.util.Map headers -> l
    java.util.Map cookies -> m
    com.androidquery.callback.Transformer transformer -> n
    java.lang.Object result -> result
    java.io.File cacheDir -> o
    com.androidquery.auth.AccountHandle ah -> p
    com.androidquery.callback.AjaxStatus status -> status
    boolean fileCache -> fileCache
    boolean memCache -> memCache
    boolean refresh -> q
    long expire -> r
    java.lang.String encoding -> s
    java.lang.ref.WeakReference act -> t
    boolean uiCallback -> u
    com.androidquery.callback.Transformer st -> v
    java.lang.Class[] DEFAULT_SIG -> w
    boolean completed -> x
    boolean blocked -> y
    boolean reauth -> z
    java.util.concurrent.ExecutorService fetchExe -> A
    org.apache.http.conn.scheme.SocketFactory ssf -> B
    org.apache.http.impl.client.DefaultHttpClient client -> C
    int lastStatus -> D
    java.lang.Object self() -> b
    void clear() -> c
    void setTimeout(int) -> setTimeout
    void setAgent(java.lang.String) -> setAgent
    void setGZip(boolean) -> setGZip
    void setTransformer(com.androidquery.callback.Transformer) -> setTransformer
    java.lang.Class getType() -> getType
    java.lang.Object weakHandler(java.lang.Object,java.lang.String) -> weakHandler
    java.lang.Object handler(java.lang.Object,java.lang.String) -> handler
    java.lang.Object url(java.lang.String) -> url
    java.lang.Object type(java.lang.Class) -> type
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> transformer
    java.lang.Object fileCache(boolean) -> fileCache
    java.lang.Object memCache(boolean) -> memCache
    java.lang.Object refresh(boolean) -> refresh
    java.lang.Object uiCallback(boolean) -> uiCallback
    java.lang.Object expire(long) -> expire
    java.lang.Object header(java.lang.String,java.lang.String) -> header
    java.lang.Object cookie(java.lang.String,java.lang.String) -> cookie
    java.lang.Object encoding(java.lang.String) -> encoding
    java.lang.Object param(java.lang.String,java.lang.Object) -> param
    java.lang.Object params(java.util.Map) -> params
    java.lang.Object progress(android.view.View) -> progress
    java.lang.Object progress(android.app.Dialog) -> progress
    java.lang.Object progress(java.lang.Object) -> progress
    void callback() -> a
    void wake() -> d
    void block() -> block
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    java.lang.Object datastoreGet(java.lang.String) -> datastoreGet
    void showProgress(boolean) -> showProgress
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void memPut(java.lang.String,java.lang.Object) -> memPut
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> filePut
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    void async(android.app.Activity) -> async
    void async(android.content.Context) -> async
    boolean isActive() -> e
    void failure(int,java.lang.String) -> failure
    void work(android.content.Context) -> a
    boolean cacheAvailable(android.content.Context) -> cacheAvailable
    void run() -> run
    void backgroundWork() -> f
    java.lang.String getCacheUrl() -> g
    void fileWork() -> h
    void datastoreWork() -> i
    void networkWork() -> j
    java.io.File getCacheFile() -> getCacheFile
    void filePut() -> k
    java.lang.String extractUrl(android.net.Uri) -> a
    java.util.Map extractParams(android.net.Uri) -> b
    void network() -> l
    void afterWork() -> m
    void execute(java.lang.Runnable) -> execute
    void setNetworkLimit(int) -> setNetworkLimit
    void cancel() -> cancel
    java.lang.String patchUrl(java.lang.String) -> a
    void httpGet(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    void httpPost(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    void setSSF(org.apache.http.conn.scheme.SocketFactory) -> setSSF
    org.apache.http.impl.client.DefaultHttpClient getClient() -> n
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object auth(android.app.Activity,java.lang.String,java.lang.String) -> auth
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> auth
    java.lang.String getUrl() -> getUrl
    java.lang.Object getHandler() -> getHandler
    java.lang.String getCallback() -> getCallback
    int getLastStatus() -> getLastStatus
    java.lang.Object getResult() -> getResult
    com.androidquery.callback.AjaxStatus getStatus() -> getStatus
    java.lang.String getEncoding() -> getEncoding
    boolean isMultiPart(java.util.Map) -> a
    void httpMulti(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> b
    void writeObject(java.io.DataOutputStream,java.lang.String,java.lang.Object) -> a
    void writeData(java.io.DataOutputStream,java.lang.String,java.io.InputStream) -> a
    void writeField(java.io.DataOutputStream,java.lang.String,java.lang.String) -> a
    java.lang.String makeCookie() -> o
com.androidquery.callback.AjaxCallback -> com.androidquery.callback.AjaxCallback:
com.androidquery.callback.AjaxStatus -> com.androidquery.callback.AjaxStatus:
    int NETWORK -> NETWORK
    int DATASTORE -> DATASTORE
    int FILE -> FILE
    int MEMORY -> MEMORY
    int DEVICE -> DEVICE
    int NETWORK_ERROR -> NETWORK_ERROR
    int AUTH_ERROR -> AUTH_ERROR
    int TRANSFORM_ERROR -> TRANSFORM_ERROR
    int code -> a
    java.lang.String message -> b
    java.lang.String redirect -> c
    byte[] data -> d
    java.util.Date time -> e
    boolean refresh -> f
    org.apache.http.impl.client.DefaultHttpClient client -> g
    long duration -> h
    int source -> i
    long start -> j
    boolean done -> k
    boolean invalid -> l
    boolean reauth -> m
    java.lang.String error -> n
    org.apache.http.protocol.HttpContext context -> o
    org.apache.http.Header[] headers -> p
    com.androidquery.callback.AjaxStatus source(int) -> source
    com.androidquery.callback.AjaxStatus code(int) -> code
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> error
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> message
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> redirect
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> context
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> time
    com.androidquery.callback.AjaxStatus refresh(boolean) -> refresh
    com.androidquery.callback.AjaxStatus reauth(boolean) -> reauth
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> client
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> headers
    com.androidquery.callback.AjaxStatus done() -> done
    com.androidquery.callback.AjaxStatus data(byte[]) -> data
    com.androidquery.callback.AjaxStatus invalidate() -> invalidate
    boolean getDone() -> getDone
    boolean getReauth() -> getReauth
    boolean getInvalid() -> getInvalid
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String getRedirect() -> getRedirect
    byte[] getData() -> getData
    java.util.Date getTime() -> getTime
    boolean getRefresh() -> getRefresh
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    long getDuration() -> getDuration
    int getSource() -> getSource
    java.lang.String getError() -> getError
    boolean expired(long) -> expired
    java.util.List getCookies() -> getCookies
    java.util.List getHeaders() -> getHeaders
com.androidquery.callback.BitmapAjaxCallback -> com.androidquery.callback.BitmapAjaxCallback:
    int SMALL_MAX -> a
    int BIG_MAX -> b
    int SMALL_PIXELS -> c
    int BIG_PIXELS -> d
    int BIG_TPIXELS -> e
    java.util.Map smallCache -> f
    java.util.Map bigCache -> g
    java.util.Map invalidCache -> h
    java.util.HashMap queueMap -> i
    java.lang.ref.WeakReference v -> j
    int targetWidth -> k
    int fallback -> l
    java.io.File imageFile -> m
    android.graphics.Bitmap bm -> n
    int animation -> o
    android.graphics.Bitmap preset -> p
    float ratio -> q
    boolean targetDim -> r
    float anchor -> s
    boolean invalid -> t
    android.graphics.BitmapFactory$Options reuse -> u
    android.graphics.Bitmap empty -> v
    android.graphics.Bitmap dummy -> w
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> imageView
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> targetWidth
    com.androidquery.callback.BitmapAjaxCallback file(java.io.File) -> file
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> preset
    com.androidquery.callback.BitmapAjaxCallback bitmap(android.graphics.Bitmap) -> bitmap
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> fallback
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> animation
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> ratio
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> anchor
    com.androidquery.callback.BitmapAjaxCallback reuse(android.graphics.BitmapFactory$Options) -> reuse
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options) -> a
    void setField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,android.graphics.BitmapFactory$Options) -> getResizedImage
    int sampleSize(int,int) -> a
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> a
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    android.graphics.Bitmap getFallback() -> b
    android.graphics.Bitmap getMemoryCached(android.content.Context,int) -> getMemoryCached
    android.graphics.Bitmap getEmptyBitmap() -> getEmptyBitmap
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void setIconCacheLimit(int) -> setIconCacheLimit
    void setCacheLimit(int) -> setCacheLimit
    void setPixelLimit(int) -> setPixelLimit
    void setSmallPixel(int) -> setSmallPixel
    void setMaxPixelLimit(int) -> setMaxPixelLimit
    void clearCache() -> clearCache
    void clearTasks() -> clearTasks
    java.util.Map getBCache() -> c
    java.util.Map getSCache() -> d
    java.util.Map getICache() -> e
    android.graphics.Bitmap memGet(java.lang.String) -> memGet
    android.graphics.Bitmap getMemoryCached(java.lang.String,int) -> getMemoryCached
    android.graphics.Bitmap memGet(java.lang.String,int) -> a
    java.lang.String getKey(java.lang.String,int) -> b
    void memPut(java.lang.String,int,android.graphics.Bitmap,boolean) -> a
    void memPut(java.lang.String,android.graphics.Bitmap) -> memPut
    android.graphics.Bitmap filter(android.view.View,android.graphics.Bitmap,int) -> a
    void presetBitmap(java.lang.String,android.widget.ImageView) -> a
    void setBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float,java.io.File,android.graphics.BitmapFactory$Options) -> a
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int,java.io.File,android.graphics.BitmapFactory$Options) -> a
    boolean fadeIn(int,int) -> b
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle) -> async
    void async(android.content.Context) -> async
    void addQueue(java.lang.String,android.widget.ImageView) -> b
    void memPut(java.lang.String,java.lang.Object) -> memPut
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
com.androidquery.callback.Transformer -> com.androidquery.callback.Transformer:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
com.androidquery.service.MarketService -> com.androidquery.service.MarketService:
    android.app.Activity act -> a
    com.androidquery.AQuery aq -> b
    com.androidquery.service.MarketService$Handler handler -> c
    java.lang.String locale -> d
    java.lang.String rateUrl -> e
    java.lang.String updateUrl -> f
    boolean force -> g
    int progress -> h
    long expire -> i
    java.lang.String version -> j
    int level -> k
    int REVISION -> REVISION
    int MINOR -> MINOR
    int MAJOR -> MAJOR
    android.content.pm.ApplicationInfo ai -> l
    android.content.pm.PackageInfo pi -> m
    com.androidquery.service.MarketService rateUrl(java.lang.String) -> rateUrl
    com.androidquery.service.MarketService level(int) -> level
    com.androidquery.service.MarketService updateUrl(java.lang.String) -> updateUrl
    com.androidquery.service.MarketService locale(java.lang.String) -> locale
    com.androidquery.service.MarketService progress(int) -> progress
    com.androidquery.service.MarketService force(boolean) -> force
    com.androidquery.service.MarketService expire(long) -> expire
    android.content.pm.ApplicationInfo getApplicationInfo() -> a
    android.content.pm.PackageInfo getPackageInfo() -> b
    java.lang.String getHost() -> c
    java.lang.String getQueryUrl() -> d
    java.lang.String getAppId() -> e
    android.graphics.drawable.Drawable getAppIcon() -> f
    java.lang.String getVersion() -> g
    int getVersionCode() -> h
    void checkVersion() -> checkVersion
    boolean openUrl(android.app.Activity,java.lang.String) -> b
    java.lang.String getMarketUrl() -> i
    void callback(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> callback
    boolean outdated(java.lang.String,int) -> a
    boolean requireUpdate(java.lang.String,java.lang.String,int) -> a
    void showUpdateDialog(org.json.JSONObject) -> showUpdateDialog
    java.lang.String patchBody(java.lang.String) -> a
    void setSkipVersion(android.content.Context,java.lang.String) -> b
    java.lang.String getSkipVersion(android.content.Context) -> a
    boolean isActive() -> j
    android.app.Activity access$0(com.androidquery.service.MarketService) -> a
    java.lang.String access$9(com.androidquery.service.MarketService) -> b
    boolean access$10(android.app.Activity,java.lang.String) -> a
    java.lang.String access$11(com.androidquery.service.MarketService) -> c
    java.lang.String access$12(com.androidquery.service.MarketService) -> d
    void access$13(android.content.Context,java.lang.String) -> a
com.androidquery.service.MarketService$Handler -> com.androidquery.service.a:
    com.androidquery.service.MarketService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.androidquery.util.AQUtility -> com.androidquery.util.AQUtility:
    boolean debug -> a
    java.lang.Object wait -> b
    java.lang.Thread$UncaughtExceptionHandler eh -> c
    java.util.Map times -> d
    android.os.Handler handler -> e
    java.util.concurrent.ScheduledExecutorService storeExe -> f
    java.io.File cacheDir -> g
    android.content.Context context -> h
    void setDebug(boolean) -> setDebug
    void debugWait(long) -> debugWait
    void debugNotify() -> debugNotify
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void report(java.lang.Throwable) -> report
    void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setExceptionHandler
    void time(java.lang.String) -> time
    long timeEnd(java.lang.String,long) -> timeEnd
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    void transparent(android.view.View,boolean) -> transparent
    void setAlpha(android.view.View,float) -> a
    void ensureUIThread() -> ensureUIThread
    boolean isUIThread() -> isUIThread
    android.os.Handler getHandler() -> getHandler
    void post(java.lang.Runnable) -> post
    void postDelayed(java.lang.Runnable,long) -> postDelayed
    java.lang.String getMD5Hex(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    byte[] toBytes(java.io.InputStream) -> toBytes
    void write(java.io.File,byte[]) -> write
    void close(java.io.InputStream) -> close
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> a
    void storeAsync(java.io.File,byte[],long) -> storeAsync
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    void setCacheDir(java.io.File) -> setCacheDir
    java.io.File makeCacheFile(java.io.File,java.lang.String) -> a
    java.lang.String getCacheFileName(java.lang.String) -> b
    java.io.File getExistedCacheByUrl(android.content.Context,java.lang.String) -> getExistedCacheByUrl
    java.io.File getCacheFile(java.io.File,java.lang.String) -> getCacheFile
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> getExistedCacheByUrl
    java.io.File getExistedCacheByUrlSetAccess(java.io.File,java.lang.String) -> getExistedCacheByUrlSetAccess
    void lastAccess(java.io.File) -> a
    void store(java.io.File,byte[]) -> store
    void cleanCacheAsync(android.content.Context) -> cleanCacheAsync
    void cleanCacheAsync(android.content.Context,long,long) -> cleanCacheAsync
    void cleanCache(java.io.File,long,long) -> cleanCache
    java.io.File getTempDir() -> getTempDir
    boolean testCleanNeeded(java.io.File[],long) -> a
    void cleanCache(java.io.File[],long) -> b
    int dip2pixel(android.content.Context,float) -> dip2pixel
    void setContext(android.app.Application) -> setContext
    android.content.Context getContext() -> getContext
com.androidquery.util.BitmapCache -> com.androidquery.util.BitmapCache:
    int maxCount -> a
    int maxPixels -> b
    int maxTotalPixels -> c
    int pixels -> d
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.Object) -> remove
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> a
    void shrink() -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> com.androidquery.util.Common:
    java.lang.Object handler -> a
    java.lang.String method -> b
    java.lang.Object[] params -> c
    boolean fallback -> d
    java.lang.Class[] sig -> e
    int methodId -> f
    int STORE_FILE -> STORE_FILE
    int CLEAN_CACHE -> CLEAN_CACHE
    int scrollState -> g
    android.widget.AbsListView$OnScrollListener osl -> h
    int lastBottom -> i
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> j
    boolean galleryListen -> k
    com.androidquery.util.Common forward(java.lang.Object,java.lang.String,boolean,java.lang.Class[]) -> forward
    com.androidquery.util.Common method(int,java.lang.Object[]) -> method
    java.lang.Object invoke(java.lang.Object[]) -> a
    int compare(java.io.File,java.io.File) -> compare
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getScrollState() -> getScrollState
    void forward(android.widget.AbsListView$OnScrollListener) -> forward
    void checkScrolledBottom(android.widget.AbsListView,int) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScrollStateChanged(android.widget.ExpandableListView,int) -> a
    void onScrollStateChanged2(android.widget.AbsListView,int) -> b
    boolean shouldDelay(int,int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelayGallery(int,android.view.View,android.view.ViewGroup,java.lang.String) -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void listen(android.widget.Gallery) -> listen
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.Constants -> com.androidquery.util.Constants:
    java.lang.String VERSION -> VERSION
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int FLAG_HARDWARE_ACCELERATED -> FLAG_HARDWARE_ACCELERATED
    int FLAG_ACTIVITY_NO_ANIMATION -> FLAG_ACTIVITY_NO_ANIMATION
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int FADE_IN -> FADE_IN
    int FADE_IN_NETWORK -> FADE_IN_NETWORK
    int FADE_IN_FILE -> FADE_IN_FILE
    int TAG_URL -> TAG_URL
    int TAG_SCROLL_LISTENER -> TAG_SCROLL_LISTENER
    int TAG_LAYOUT -> TAG_LAYOUT
    int TAG_NUM -> TAG_NUM
    float RATIO_PRESERVE -> RATIO_PRESERVE
    float ANCHOR_DYNAMIC -> ANCHOR_DYNAMIC
    java.lang.String ACTIVE_ACCOUNT -> ACTIVE_ACCOUNT
    java.lang.String AUTH_READER -> AUTH_READER
    java.lang.String AUTH_PICASA -> AUTH_PICASA
    java.lang.String AUTH_SPREADSHEETS -> AUTH_SPREADSHEETS
    java.lang.String AUTH_DOC_LIST -> AUTH_DOC_LIST
    java.lang.String AUTH_YOUTUBE -> AUTH_YOUTUBE
    java.lang.String AUTH_ANALYTICS -> AUTH_ANALYTICS
    java.lang.String AUTH_BLOGGER -> AUTH_BLOGGER
    java.lang.String AUTH_CALENDAR -> AUTH_CALENDAR
    java.lang.String AUTH_CONTACTS -> AUTH_CONTACTS
    java.lang.String AUTH_MAPS -> AUTH_MAPS
    java.lang.String POST_ENTITY -> POST_ENTITY
    int SDK_INT -> SDK_INT
com.androidquery.util.PredefinedBAOS -> com.androidquery.util.PredefinedBAOS:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.RatioDrawable -> com.androidquery.util.RatioDrawable:
    float ratio -> a
    java.lang.ref.WeakReference ref -> b
    boolean adjusted -> c
    android.graphics.Matrix m -> d
    int w -> e
    float anchor -> f
    int version -> g
    boolean loading -> h
    java.io.File file -> i
    android.graphics.BitmapFactory$Options reuse -> j
    int getGen(android.graphics.Bitmap) -> a
    int getWidth(android.widget.ImageView) -> a
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> a
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    int targetHeight(int,int,int) -> a
    android.graphics.Matrix getMatrix(android.widget.ImageView,android.graphics.Bitmap) -> a
    float getYOffset(int,int) -> a
com.androidquery.util.WebImage -> com.androidquery.util.WebImage:
    java.lang.Object progress -> a
    android.webkit.WebView wv -> b
    java.lang.String url -> c
    boolean zoom -> d
    boolean control -> e
    int color -> f
    java.lang.String template -> g
    java.lang.String getSource(android.content.Context) -> a
    void fixWebviewTip(android.content.Context) -> b
    void load() -> load
    void delaySetup() -> a
    void setup() -> b
    void done(android.webkit.WebView) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    void disableZoomControl(android.webkit.WebView) -> b
    android.webkit.WebView access$0(com.androidquery.util.WebImage) -> a
    void access$1(com.androidquery.util.WebImage) -> b
com.androidquery.util.WebImage$1 -> com.androidquery.util.a:
    com.androidquery.util.WebImage this$0 -> a
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.androidquery.util.XmlDom -> com.androidquery.util.XmlDom:
    org.w3c.dom.Element root -> a
    org.w3c.dom.Element getElement() -> getElement
    com.androidquery.util.XmlDom tag(java.lang.String) -> tag
    com.androidquery.util.XmlDom tag(java.lang.String,java.lang.String,java.lang.String) -> tag
    java.util.List tags(java.lang.String) -> tags
    com.androidquery.util.XmlDom child(java.lang.String) -> child
    com.androidquery.util.XmlDom child(java.lang.String,java.lang.String,java.lang.String) -> child
    java.util.List children(java.lang.String) -> children
    java.util.List children(java.lang.String,java.lang.String,java.lang.String) -> children
    java.util.List tags(java.lang.String,java.lang.String,java.lang.String) -> tags
    java.util.List convert(org.w3c.dom.NodeList,java.lang.String,java.lang.String,java.lang.String) -> a
    com.androidquery.util.XmlDom convert(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String text(java.lang.String) -> text
    java.lang.String attr(java.lang.String) -> attr
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String serialize(org.w3c.dom.Element,int) -> a
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
    java.lang.String text() -> text
    java.lang.String text(org.w3c.dom.Node) -> a
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
com.energy.energyMusic.BuildConfig -> com.energy.energyMusic.BuildConfig:
    boolean DEBUG -> DEBUG
com.energy.energyMusic.Constants -> com.energy.energyMusic.Constants:
    java.lang.String LASTFM_API_KEY -> LASTFM_API_KEY
    java.lang.String APOLLO -> APOLLO
    java.lang.String APOLLO_PREFERENCES -> APOLLO_PREFERENCES
    java.lang.String ARTIST_KEY -> ARTIST_KEY
    java.lang.String ALBUM_KEY -> ALBUM_KEY
    java.lang.String ALBUM_ID_KEY -> ALBUM_ID_KEY
    java.lang.String NUMALBUMS -> NUMALBUMS
    java.lang.String GENRE_KEY -> GENRE_KEY
    java.lang.String ARTIST_ID -> ARTIST_ID
    java.lang.String NUMWEEKS -> NUMWEEKS
    java.lang.String BUILD_DEPENDS -> BUILD_DEPENDS
    java.lang.String PLAYLIST_NAME_FAVORITES -> PLAYLIST_NAME_FAVORITES
    java.lang.String PLAYLIST_NAME -> PLAYLIST_NAME
    java.lang.String WIDGET_STYLE -> WIDGET_STYLE
    java.lang.String VISUALIZATION_TYPE -> VISUALIZATION_TYPE
    java.lang.String DELETE_CACHE -> DELETE_CACHE
    java.lang.String BUILD_VERSION -> BUILD_VERSION
    java.lang.String UP_STARTS_ALBUM_ACTIVITY -> UP_STARTS_ALBUM_ACTIVITY
    java.lang.String TABS_ENABLED -> TABS_ENABLED
    java.lang.String TYPE_ARTIST -> TYPE_ARTIST
    java.lang.String TYPE_ALBUM -> TYPE_ALBUM
    java.lang.String TYPE_GENRE -> TYPE_GENRE
    java.lang.String TYPE_SONG -> TYPE_SONG
    java.lang.String TYPE_PLAYLIST -> TYPE_PLAYLIST
    java.lang.String ALBUM_SUFFIX -> ALBUM_SUFFIX
    java.lang.String ARTIST_SUFFIX -> ARTIST_SUFFIX
    java.lang.String PLAYLIST_SUFFIX -> PLAYLIST_SUFFIX
    java.lang.String GENRE_SUFFIX -> GENRE_SUFFIX
    java.lang.String SRC_FIRST_AVAILABLE -> SRC_FIRST_AVAILABLE
    java.lang.String SRC_LASTFM -> SRC_LASTFM
    java.lang.String SRC_FILE -> SRC_FILE
    java.lang.String SRC_GALLERY -> SRC_GALLERY
    java.lang.String SIZE_NORMAL -> SIZE_NORMAL
    java.lang.String SIZE_THUMB -> SIZE_THUMB
    java.lang.String MIME_TYPE -> MIME_TYPE
    java.lang.String INTENT_ACTION -> INTENT_ACTION
    java.lang.String DATA_SCHEME -> DATA_SCHEME
    java.lang.String EXTERNAL -> EXTERNAL
    long PLAYLIST_UNKNOWN -> PLAYLIST_UNKNOWN
    long PLAYLIST_ALL_SONGS -> PLAYLIST_ALL_SONGS
    long PLAYLIST_QUEUE -> PLAYLIST_QUEUE
    long PLAYLIST_NEW -> PLAYLIST_NEW
    long PLAYLIST_FAVORITES -> PLAYLIST_FAVORITES
    long PLAYLIST_RECENTLY_ADDED -> PLAYLIST_RECENTLY_ADDED
    java.lang.String[] GENRES_DB -> GENRES_DB
    int THEME_ITEM_BACKGROUND -> THEME_ITEM_BACKGROUND
    int THEME_ITEM_FOREGROUND -> THEME_ITEM_FOREGROUND
    java.lang.String INTENT_ADD_TO_PLAYLIST -> INTENT_ADD_TO_PLAYLIST
    java.lang.String INTENT_PLAYLIST_LIST -> INTENT_PLAYLIST_LIST
    java.lang.String INTENT_CREATE_PLAYLIST -> INTENT_CREATE_PLAYLIST
    java.lang.String INTENT_RENAME_PLAYLIST -> INTENT_RENAME_PLAYLIST
    java.lang.String INTENT_KEY_RENAME -> INTENT_KEY_RENAME
    java.lang.String INTENT_KEY_DEFAULT_NAME -> INTENT_KEY_DEFAULT_NAME
com.energy.energyMusic.IApolloService -> com.energy.energyMusic.IApolloService:
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    void moveQueueItem(int,int) -> moveQueueItem
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.energy.energyMusic.IApolloService$Stub -> com.energy.energyMusic.IApolloService$Stub:
    com.energy.energyMusic.IApolloService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.energy.energyMusic.IApolloService$Stub$Proxy -> com.energy.energyMusic.a:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    void moveQueueItem(int,int) -> moveQueueItem
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.energy.energyMusic.NowPlayingCursor -> com.energy.energyMusic.NowPlayingCursor:
    java.lang.String[] mProjection -> a
    android.database.Cursor mCurrentPlaylistCursor -> b
    int mSize -> c
    long[] mNowPlaying -> d
    long[] mCursorIdxs -> e
    android.content.Context context -> f
    com.energy.energyMusic.IApolloService mService -> g
    void makeNowPlayingCursor() -> a
    int getCount() -> getCount
    boolean onMove(int,int) -> onMove
    java.lang.String getString(int) -> getString
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    int getType(int) -> getType
    boolean isNull(int) -> isNull
    java.lang.String[] getColumnNames() -> getColumnNames
    void deactivate() -> deactivate
    boolean requery() -> requery
com.energy.energyMusic.R -> com.energy.energyMusic.R:
com.energy.energyMusic.R$anim -> com.energy.energyMusic.R$anim:
    int peak_meter_1 -> peak_meter_1
    int peak_meter_2 -> peak_meter_2
com.energy.energyMusic.R$array -> com.energy.energyMusic.R$array:
    int tab_titles_entries -> tab_titles_entries
    int tab_titles_values -> tab_titles_values
    int visualization_types -> visualization_types
    int visualization_types_entries -> visualization_types_entries
    int widget_style_types -> widget_style_types
com.energy.energyMusic.R$attr -> com.energy.energyMusic.R$attr:
    int click_remove_id -> click_remove_id
    int collapsed_height -> collapsed_height
    int dragView -> dragView
    int drag_enabled -> drag_enabled
    int drag_handle_id -> drag_handle_id
    int drag_scroll_start -> drag_scroll_start
    int drag_start_mode -> drag_start_mode
    int drop_animation_duration -> drop_animation_duration
    int fadeColor -> fadeColor
    int flingVelocity -> flingVelocity
    int fling_handle_id -> fling_handle_id
    int float_alpha -> float_alpha
    int float_background_color -> float_background_color
    int max_drag_scroll_speed -> max_drag_scroll_speed
    int overlay -> overlay
    int panelHeight -> panelHeight
    int paralaxOffset -> paralaxOffset
    int remove_animation_duration -> remove_animation_duration
    int remove_enabled -> remove_enabled
    int remove_mode -> remove_mode
    int shadowHeight -> shadowHeight
    int slide_shuffle_speed -> slide_shuffle_speed
    int sort_enabled -> sort_enabled
    int track_drag_sort -> track_drag_sort
    int use_default_controller -> use_default_controller
com.energy.energyMusic.R$color -> com.energy.energyMusic.R$color:
    int actionbar_text -> actionbar_text
    int background_grey -> background_grey
    int black -> black
    int holo_blue_dark -> holo_blue_dark
    int listview_item_bg_color -> listview_item_bg_color
    int queue_callout_line -> queue_callout_line
    int selected_tabtext -> selected_tabtext
    int shuffle_grey -> shuffle_grey
    int tab_text_color -> tab_text_color
    int titlebackgroundcolor -> titlebackgroundcolor
    int titletextcolor -> titletextcolor
    int transparent -> transparent
    int transparent_black -> transparent_black
    int unselected_tabtext -> unselected_tabtext
    int white -> white
com.energy.energyMusic.R$dimen -> com.energy.energyMusic.R$dimen:
    int audio_player_artwork_padding -> audio_player_artwork_padding
    int audio_player_button_container_padding -> audio_player_button_container_padding
    int audio_player_controls_height -> audio_player_controls_height
    int audio_player_info_container_padding -> audio_player_info_container_padding
    int audio_player_seek_bar_padding -> audio_player_seek_bar_padding
    int bottom_action_bar_album_art_width_height -> bottom_action_bar_album_art_width_height
    int bottom_action_bar_divider_height -> bottom_action_bar_divider_height
    int bottom_action_bar_height -> bottom_action_bar_height
    int bottom_action_bar_info_padding_left -> bottom_action_bar_info_padding_left
    int bottom_action_bar_item_padding_left_right -> bottom_action_bar_item_padding_left_right
    int bottom_action_bar_item_width -> bottom_action_bar_item_width
    int bottom_action_bar_padding_left -> bottom_action_bar_padding_left
    int colorstrip_height -> colorstrip_height
    int fast_scroll_padding_right -> fast_scroll_padding_right
    int four_by_one_album_art_width -> four_by_one_album_art_width
    int four_by_two_album_art_width -> four_by_two_album_art_width
    int four_by_two_control_height -> four_by_two_control_height
    int four_by_two_height -> four_by_two_height
    int gridview_image_height -> gridview_image_height
    int gridview_image_width -> gridview_image_width
    int gridview_item_ccontainer_height -> gridview_item_ccontainer_height
    int gridview_item_ccontainer_padding_left -> gridview_item_ccontainer_padding_left
    int gridview_item_ccontainer_padding_right -> gridview_item_ccontainer_padding_right
    int gridview_item_fullheight -> gridview_item_fullheight
    int gridview_item_margin -> gridview_item_margin
    int gridview_item_padding_bottom -> gridview_item_padding_bottom
    int gridview_item_padding_right_left -> gridview_item_padding_right_left
    int gridview_item_padding_right_left_outer -> gridview_item_padding_right_left_outer
    int half_and_half_container_padding -> half_and_half_container_padding
    int half_and_half_image_height -> half_and_half_image_height
    int half_and_half_imagebutton_padding -> half_and_half_imagebutton_padding
    int half_and_half_imageheight -> half_and_half_imageheight
    int half_and_half_text_padding -> half_and_half_text_padding
    int half_and_half_text_wrap_height -> half_and_half_text_wrap_height
    int header_text_padding -> header_text_padding
    int header_text_padding_left -> header_text_padding_left
    int list_separator_container_padding_left -> list_separator_container_padding_left
    int list_separator_min_height -> list_separator_min_height
    int list_separator_padding_left_right -> list_separator_padding_left_right
    int listview_album_art -> listview_album_art
    int listview_album_margin -> listview_album_margin
    int listview_drag_height -> listview_drag_height
    int listview_drag_width -> listview_drag_width
    int listview_item_height -> listview_item_height
    int listview_items_padding_gp_top -> listview_items_padding_gp_top
    int listview_items_padding_left_right -> listview_items_padding_left_right
    int listview_items_padding_left_top -> listview_items_padding_left_top
    int listview_items_padding_right -> listview_items_padding_right
    int listview_items_padding_small_top -> listview_items_padding_small_top
    int listview_items_padding_top_bottom -> listview_items_padding_top_bottom
    int listview_peak_meter_one_padding_right -> listview_peak_meter_one_padding_right
    int listview_peak_meter_two_padding_right -> listview_peak_meter_two_padding_right
    int notification_expanded_height -> notification_expanded_height
    int notification_padding -> notification_padding
    int one_by_one_height -> one_by_one_height
    int one_by_one_width -> one_by_one_width
    int peak_meter_one_padding_right -> peak_meter_one_padding_right
    int peak_meter_padding_bottom -> peak_meter_padding_bottom
    int peak_meter_padding_top -> peak_meter_padding_top
    int peak_meter_two_padding_right -> peak_meter_two_padding_right
    int play_controls_notification -> play_controls_notification
    int quick_context_line_height -> quick_context_line_height
    int quick_context_line_width -> quick_context_line_width
    int quick_context_margin_right -> quick_context_margin_right
    int quick_context_padding_right -> quick_context_padding_right
    int simple_eq_margin_left_right -> simple_eq_margin_left_right
    int simple_eq_margin_top_bottom -> simple_eq_margin_top_bottom
    int simple_eq_section_margin -> simple_eq_section_margin
    int simple_eq_seek_vert_height -> simple_eq_seek_vert_height
    int simple_eq_seek_vert_padding_left -> simple_eq_seek_vert_padding_left
    int simple_eq_seek_vert_padding_right -> simple_eq_seek_vert_padding_right
    int simple_eq_seek_vert_width -> simple_eq_seek_vert_width
    int status_bar_album_art -> status_bar_album_art
    int status_bar_button_info_container_padding_left -> status_bar_button_info_container_padding_left
    int status_bar_button_width_height -> status_bar_button_width_height
    int status_bar_recents_app_description_text_size -> status_bar_recents_app_description_text_size
    int status_bar_recents_app_icon_left_margin -> status_bar_recents_app_icon_left_margin
    int status_bar_recents_app_icon_max_height -> status_bar_recents_app_icon_max_height
    int status_bar_recents_app_icon_max_width -> status_bar_recents_app_icon_max_width
    int status_bar_recents_app_icon_top_margin -> status_bar_recents_app_icon_top_margin
    int status_bar_recents_app_label_left_margin -> status_bar_recents_app_label_left_margin
    int status_bar_recents_app_label_text_size -> status_bar_recents_app_label_text_size
    int status_bar_recents_app_label_width -> status_bar_recents_app_label_width
    int status_bar_recents_fading_edge_length -> status_bar_recents_fading_edge_length
    int status_bar_recents_item_padding -> status_bar_recents_item_padding
    int status_bar_recents_thumbnail_height -> status_bar_recents_thumbnail_height
    int status_bar_recents_thumbnail_left_margin -> status_bar_recents_thumbnail_left_margin
    int status_bar_recents_thumbnail_width -> status_bar_recents_thumbnail_width
    int tab_height -> tab_height
    int tab_padding_left_right -> tab_padding_left_right
    int tab_padding_top_bottom -> tab_padding_top_bottom
    int text_size_extra_micro -> text_size_extra_micro
    int text_size_large -> text_size_large
    int text_size_medium -> text_size_medium
    int text_size_micro -> text_size_micro
    int text_size_small -> text_size_small
    int viewpager_margin_stroke_width -> viewpager_margin_stroke_width
com.energy.energyMusic.R$drawable -> com.energy.energyMusic.R$drawable:
    int above_shadow -> above_shadow
    int actionbar -> actionbar
    int apollo_holo_dark_favorite_normal -> apollo_holo_dark_favorite_normal
    int apollo_holo_dark_favorite_selected -> apollo_holo_dark_favorite_selected
    int apollo_holo_dark_next -> apollo_holo_dark_next
    int apollo_holo_dark_next_semitransparent -> apollo_holo_dark_next_semitransparent
    int apollo_holo_dark_notifiation_bar_collapse -> apollo_holo_dark_notifiation_bar_collapse
    int apollo_holo_dark_overflow -> apollo_holo_dark_overflow
    int apollo_holo_dark_pause -> apollo_holo_dark_pause
    int apollo_holo_dark_play -> apollo_holo_dark_play
    int apollo_holo_dark_prev -> apollo_holo_dark_prev
    int apollo_holo_dark_previous_semitransparent -> apollo_holo_dark_previous_semitransparent
    int apollo_holo_dark_repeat_normal -> apollo_holo_dark_repeat_normal
    int apollo_holo_dark_search -> apollo_holo_dark_search
    int apollo_holo_dark_shuffle_normal -> apollo_holo_dark_shuffle_normal
    int apollo_holo_light_favorite_normal -> apollo_holo_light_favorite_normal
    int apollo_holo_light_favorite_selected -> apollo_holo_light_favorite_selected
    int apollo_holo_light_next -> apollo_holo_light_next
    int apollo_holo_light_overflow -> apollo_holo_light_overflow
    int apollo_holo_light_pause -> apollo_holo_light_pause
    int apollo_holo_light_play -> apollo_holo_light_play
    int apollo_holo_light_previous -> apollo_holo_light_previous
    int apollo_holo_light_repeat_all -> apollo_holo_light_repeat_all
    int apollo_holo_light_repeat_normal -> apollo_holo_light_repeat_normal
    int apollo_holo_light_repeat_one -> apollo_holo_light_repeat_one
    int apollo_holo_light_search -> apollo_holo_light_search
    int apollo_holo_light_search_actionbar -> apollo_holo_light_search_actionbar
    int apollo_holo_light_shuffle_normal -> apollo_holo_light_shuffle_normal
    int apollo_holo_light_shuffle_on -> apollo_holo_light_shuffle_on
    int apollo_settings_themes -> apollo_settings_themes
    int appwidget_bg -> appwidget_bg
    int appwidget_bg_holo -> appwidget_bg_holo
    int audio_player_seekbar -> audio_player_seekbar
    int bannermod -> bannermod
    int bar_graph -> bar_graph
    int below_shadow -> below_shadow
    int bigenergy -> bigenergy
    int bigenergyv2 -> bigenergyv2
    int btn_drag_sort -> btn_drag_sort
    int btn_switch_queue -> btn_switch_queue
    int btn_switch_queue_active -> btn_switch_queue_active
    int colorstrip_shadow -> colorstrip_shadow
    int dropdown_ic_arrow_normal_holo_light -> dropdown_ic_arrow_normal_holo_light
    int energybanner -> energybanner
    int energybanner_alter -> energybanner_alter
    int energybanner_alter_exp -> energybanner_alter_exp
    int energybannerv2 -> energybannerv2
    int gridview_item_background -> gridview_item_background
    int holo_selector -> holo_selector
    int ic_logo -> ic_logo
    int indicator_playing_peak_meter_1 -> indicator_playing_peak_meter_1
    int indicator_playing_peak_meter_2 -> indicator_playing_peak_meter_2
    int indicator_playing_peak_meter_3 -> indicator_playing_peak_meter_3
    int indicator_playing_peak_meter_4 -> indicator_playing_peak_meter_4
    int indicator_playing_peak_meter_5 -> indicator_playing_peak_meter_5
    int list_section_divider_holo_custom -> list_section_divider_holo_custom
    int listview_item_background -> listview_item_background
    int next_semitransparent -> next_semitransparent
    int no_art_normal -> no_art_normal
    int no_art_small -> no_art_small
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int prev_semitransparent -> prev_semitransparent
    int promo -> promo
    int queue_thumbnail_bg -> queue_thumbnail_bg
    int queue_thumbnail_fg -> queue_thumbnail_fg
    int recents_thumbnail_bg_press -> recents_thumbnail_bg_press
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
    int shuffle_background -> shuffle_background
    int stat_notify_music -> stat_notify_music
    int stat_notify_music_alter -> stat_notify_music_alter
    int status_bg -> status_bg
    int tab -> tab
    int tab_selected_holo -> tab_selected_holo
    int tab_selected_pressed_focused_holo -> tab_selected_pressed_focused_holo
    int tab_selected_pressed_holo -> tab_selected_pressed_holo
    int tab_unselected_focused_holo -> tab_unselected_focused_holo
    int tab_unselected_holo -> tab_unselected_holo
    int tab_unselected_pressed_holo -> tab_unselected_pressed_holo
    int title_bar_shadow -> title_bar_shadow
    int view_more -> view_more
    int view_more_album -> view_more_album
    int view_more_song -> view_more_song
    int viewpager_margin -> viewpager_margin
com.energy.energyMusic.R$id -> com.energy.energyMusic.R$id:
    int action_bar_album_art -> action_bar_album_art
    int action_bar_album_name -> action_bar_album_name
    int action_bar_layout -> action_bar_layout
    int action_bar_track_name -> action_bar_track_name
    int action_eqalizer -> action_eqalizer
    int action_search -> action_search
    int action_settings -> action_settings
    int action_shuffle_all -> action_shuffle_all
    int add_to_playlist -> add_to_playlist
    int app_description -> app_description
    int app_thumbnail -> app_thumbnail
    int artist_half_container -> artist_half_container
    int audio_player_album_art -> audio_player_album_art
    int audio_player_album_art_wrapper -> audio_player_album_art_wrapper
    int audio_player_current_time -> audio_player_current_time
    int audio_player_next -> audio_player_next
    int audio_player_play -> audio_player_play
    int audio_player_prev -> audio_player_prev
    int audio_player_queue_wrapper -> audio_player_queue_wrapper
    int audio_player_repeat -> audio_player_repeat
    int audio_player_shuffle -> audio_player_shuffle
    int audio_player_text_border -> audio_player_text_border
    int audio_player_total_time -> audio_player_total_time
    int audio_player_view -> audio_player_view
    int bottom_action_bar -> bottom_action_bar
    int bottom_action_bar_album_art -> bottom_action_bar_album_art
    int bottom_action_bar_artist_name -> bottom_action_bar_artist_name
    int bottom_action_bar_container -> bottom_action_bar_container
    int bottom_action_bar_container2 -> bottom_action_bar_container2
    int bottom_action_bar_dragview -> bottom_action_bar_dragview
    int bottom_action_bar_info_divider -> bottom_action_bar_info_divider
    int bottom_action_bar_next -> bottom_action_bar_next
    int bottom_action_bar_play -> bottom_action_bar_play
    int bottom_action_bar_previous -> bottom_action_bar_previous
    int bottom_action_bar_switch_queue -> bottom_action_bar_switch_queue
    int bottom_action_bar_track_name -> bottom_action_bar_track_name
    int bottom_colorstrip -> bottom_colorstrip
    int bottomactionbar_new -> bottomactionbar_new
    int buttons -> buttons
    int clickRemove -> clickRemove
    int colorstrip -> colorstrip
    int colorstrip_bottom -> colorstrip_bottom
    int eq -> eq
    int flingRemove -> flingRemove
    int four_by_one_album_appwidget -> four_by_one_album_appwidget
    int four_by_one_albumart -> four_by_one_albumart
    int four_by_one_artist -> four_by_one_artist
    int four_by_one_control_next -> four_by_one_control_next
    int four_by_one_control_play -> four_by_one_control_play
    int four_by_one_control_prev -> four_by_one_control_prev
    int four_by_one_title -> four_by_one_title
    int four_by_two -> four_by_two
    int four_by_two_albumart -> four_by_two_albumart
    int four_by_two_albumname -> four_by_two_albumname
    int four_by_two_artistname -> four_by_two_artistname
    int four_by_two_control_next -> four_by_two_control_next
    int four_by_two_control_play -> four_by_two_control_play
    int four_by_two_control_prev -> four_by_two_control_prev
    int four_by_two_control_repeat -> four_by_two_control_repeat
    int four_by_two_control_shuffle -> four_by_two_control_shuffle
    int four_by_two_controls -> four_by_two_controls
    int four_by_two_controls_info_divider -> four_by_two_controls_info_divider
    int four_by_two_info -> four_by_two_info
    int four_by_two_trackname -> four_by_two_trackname
    int gridview -> gridview
    int gridview_image -> gridview_image
    int gridview_info_holder -> gridview_info_holder
    int gridview_line_one -> gridview_line_one
    int gridview_line_two -> gridview_line_two
    int gridview_outershell -> gridview_outershell
    int gridview_text_border -> gridview_text_border
    int half -> half
    int half_artist_image -> half_artist_image
    int half_artist_image_text -> half_artist_image_text
    int half_artist_image_text_line_two -> half_artist_image_text_line_two
    int half_artist_info_holder -> half_artist_info_holder
    int header_image -> header_image
    int header_text -> header_text
    int imageView -> imageView
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_web -> image_edit_web
    int list_view -> list_view
    int listview_drag_handle -> listview_drag_handle
    int listview_item_image -> listview_item_image
    int listview_item_line_one -> listview_item_line_one
    int listview_item_line_two -> listview_item_line_two
    int notificationbg -> notificationbg
    int now_playing_viewpager -> now_playing_viewpager
    int onDown -> onDown
    int onLongPress -> onLongPress
    int onMove -> onMove
    int one_by_one_albumart -> one_by_one_albumart
    int peak_one -> peak_one
    int peak_two -> peak_two
    int play_store -> play_store
    int queue_album_art -> queue_album_art
    int queue_artist_image -> queue_artist_image
    int queue_track_name -> queue_track_name
    int quick_context_line -> quick_context_line
    int quick_context_tip -> quick_context_tip
    int quick_queue_holder -> quick_queue_holder
    int recent_item -> recent_item
    int recents_callout_line -> recents_callout_line
    int scrollingTabs -> scrollingTabs
    int settings -> settings
    int shadow -> shadow
    int share -> share
    int shuffle_imageview -> shuffle_imageview
    int shuffle_textview -> shuffle_textview
    int shuffle_wrapper -> shuffle_wrapper
    int simple_eq_band0 -> simple_eq_band0
    int simple_eq_band0_layout -> simple_eq_band0_layout
    int simple_eq_band0_seek -> simple_eq_band0_seek
    int simple_eq_band1 -> simple_eq_band1
    int simple_eq_band1_layout -> simple_eq_band1_layout
    int simple_eq_band1_seek -> simple_eq_band1_seek
    int simple_eq_band2 -> simple_eq_band2
    int simple_eq_band2_layout -> simple_eq_band2_layout
    int simple_eq_band2_seek -> simple_eq_band2_seek
    int simple_eq_band3 -> simple_eq_band3
    int simple_eq_band3_layout -> simple_eq_band3_layout
    int simple_eq_band3_seek -> simple_eq_band3_seek
    int simple_eq_band4 -> simple_eq_band4
    int simple_eq_band4_layout -> simple_eq_band4_layout
    int simple_eq_band4_seek -> simple_eq_band4_seek
    int simple_eq_band5 -> simple_eq_band5
    int simple_eq_band5_layout -> simple_eq_band5_layout
    int simple_eq_band5_seek -> simple_eq_band5_seek
    int simple_eq_bass -> simple_eq_bass
    int simple_eq_bassboost -> simple_eq_bassboost
    int simple_eq_equalizer -> simple_eq_equalizer
    int sliding_layout -> sliding_layout
    int status_bar_album_art -> status_bar_album_art
    int status_bar_album_name -> status_bar_album_name
    int status_bar_artist_name -> status_bar_artist_name
    int status_bar_collapse -> status_bar_collapse
    int status_bar_icon -> status_bar_icon
    int status_bar_next -> status_bar_next
    int status_bar_play -> status_bar_play
    int status_bar_prev -> status_bar_prev
    int status_bar_track_name -> status_bar_track_name
    int tabs -> tabs
    int textarea -> textarea
    int themeApply -> themeApply
    int themeDescription -> themeDescription
    int themeIcon -> themeIcon
    int themeSearch -> themeSearch
    int themeTitle -> themeTitle
    int track_list_context_frame -> track_list_context_frame
    int viewPager -> viewPager
    int view_more -> view_more
    int visualizerView -> visualizerView
com.energy.energyMusic.R$integer -> com.energy.energyMusic.R$integer:
    int gridview_columns -> gridview_columns
    int image_fade_in_duration -> image_fade_in_duration
    int listview_album_art -> listview_album_art
    int listview_padding_left -> listview_padding_left
    int listview_padding_right -> listview_padding_right
    int peak -> peak
    int viewpager_margin_width -> viewpager_margin_width
com.energy.energyMusic.R$layout -> com.energy.energyMusic.R$layout:
    int audio_controls -> audio_controls
    int audio_player -> audio_player
    int audio_player_browser -> audio_player_browser
    int bottom_action_bar -> bottom_action_bar
    int colorstrip -> colorstrip
    int context_menu -> context_menu
    int context_menu_header -> context_menu_header
    int custom_action_bar -> custom_action_bar
    int dragsort_listview -> dragsort_listview
    int dragsort_listview_items -> dragsort_listview_items
    int empty_view -> empty_view
    int fourbyone_app_widget -> fourbyone_app_widget
    int fourbyone_app_widget_dark -> fourbyone_app_widget_dark
    int fourbytwo_app_widget -> fourbytwo_app_widget
    int fourbytwo_app_widget_dark -> fourbytwo_app_widget_dark
    int gridview -> gridview
    int gridview_items -> gridview_items
    int half_and_half -> half_and_half
    int library_browser -> library_browser
    int list_separator -> list_separator
    int listview -> listview
    int listview_items -> listview_items
    int mi_barra_alternativa -> mi_barra_alternativa
    int mibarrasmartphone -> mibarrasmartphone
    int mibarrasmartphone_solo_busqueda -> mibarrasmartphone_solo_busqueda
    int mibarrasmartphonevacia -> mibarrasmartphonevacia
    int nowplaying_album_art -> nowplaying_album_art
    int onebyone_app_widget -> onebyone_app_widget
    int quick_queue -> quick_queue
    int quick_queue_items -> quick_queue_items
    int shadow -> shadow
    int shuffle_all -> shuffle_all
    int simple_eq -> simple_eq
    int status_bar -> status_bar
    int status_bar_expanded -> status_bar_expanded
    int tabs -> tabs
    int theme_preview -> theme_preview
    int track_browser -> track_browser
com.energy.energyMusic.R$menu -> com.energy.energyMusic.R$menu:
    int actionbar_top -> actionbar_top
    int context_albumimage -> context_albumimage
    int context_artistimage -> context_artistimage
    int context_playlist_genreimage -> context_playlist_genreimage
    int overflow_now_playing -> overflow_now_playing
com.energy.energyMusic.R$mipmap -> com.energy.energyMusic.R$mipmap:
    int ic_launcher -> ic_launcher
com.energy.energyMusic.R$plurals -> com.energy.energyMusic.R$plurals:
    int NNNtrackstoplaylist -> NNNtrackstoplaylist
    int Nalbums -> Nalbums
    int Nsongs -> Nsongs
com.energy.energyMusic.R$string -> com.energy.energyMusic.R$string:
    int about -> about
    int about_apollomod_message -> about_apollomod_message
    int about_apollomod_title -> about_apollomod_title
    int add_to_playlist -> add_to_playlist
    int album_header -> album_header
    int album_page_title -> album_page_title
    int apollo_1x1 -> apollo_1x1
    int apollo_4x1 -> apollo_4x1
    int apollo_4x2 -> apollo_4x2
    int apollo_themes -> apollo_themes
    int app_name -> app_name
    int app_version_number -> app_version_number
    int apply_theme -> apply_theme
    int artist_page_title -> artist_page_title
    int by -> by
    int cd_bottom_action_bar_album_art -> cd_bottom_action_bar_album_art
    int cd_favorite -> cd_favorite
    int cd_next -> cd_next
    int cd_overflow -> cd_overflow
    int cd_play -> cd_play
    int cd_previous -> cd_previous
    int cd_repeat -> cd_repeat
    int cd_search -> cd_search
    int cd_shuffle -> cd_shuffle
    int delete_playlist -> delete_playlist
    int delete_warning -> delete_warning
    int dependencies -> dependencies
    int dependencies_title -> dependencies_title
    int durationformatlong -> durationformatlong
    int durationformatshort -> durationformatshort
    int eqalizer -> eqalizer
    int error -> error
    int favorite -> favorite
    int get_more_themes -> get_more_themes
    int header_interface -> header_interface
    int image_edit_albums -> image_edit_albums
    int image_edit_artists -> image_edit_artists
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_genre -> image_edit_genre
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_playlist -> image_edit_playlist
    int image_edit_web -> image_edit_web
    int key_build_depends -> key_build_depends
    int key_build_version -> key_build_version
    int key_delete_cache -> key_delete_cache
    int key_tabs_enabled -> key_tabs_enabled
    int key_themes -> key_themes
    int key_themes_package -> key_themes_package
    int key_themes_preferences -> key_themes_preferences
    int key_visualization_type -> key_visualization_type
    int key_widget_style -> key_widget_style
    int new_playlist -> new_playlist
    int new_playlist_name_template -> new_playlist_name_template
    int now_listening_to -> now_listening_to
    int nowplaying -> nowplaying
    int overwrite -> overwrite
    int play_all -> play_all
    int play_external_error -> play_external_error
    int play_external_question_button_cancel -> play_external_question_button_cancel
    int play_external_question_button_play -> play_external_question_button_play
    int play_external_question_button_queue -> play_external_question_button_queue
    int play_external_question_msg -> play_external_question_msg
    int play_store -> play_store
    int queue -> queue
    int remove -> remove
    int rename_playlist -> rename_playlist
    int repeat_all -> repeat_all
    int repeat_off -> repeat_off
    int repeat_one -> repeat_one
    int save -> save
    int search -> search
    int select_theme -> select_theme
    int set_as_ringtone -> set_as_ringtone
    int settings -> settings
    int settings_delete_cache_summary -> settings_delete_cache_summary
    int settings_delete_cache_title -> settings_delete_cache_title
    int settings_storage_category -> settings_storage_category
    int share -> share
    int share_track_using -> share_track_using
    int shuffle_all -> shuffle_all
    int shuffle_off -> shuffle_off
    int shuffle_on -> shuffle_on
    int simple_eq_band0 -> simple_eq_band0
    int simple_eq_band1 -> simple_eq_band1
    int simple_eq_band2 -> simple_eq_band2
    int simple_eq_band3 -> simple_eq_band3
    int simple_eq_band4 -> simple_eq_band4
    int simple_eq_band5 -> simple_eq_band5
    int simple_eq_bass -> simple_eq_bass
    int simple_eq_equalizer -> simple_eq_equalizer
    int simple_eq_page_title -> simple_eq_page_title
    int tab_albums -> tab_albums
    int tab_albums_entry -> tab_albums_entry
    int tab_artists -> tab_artists
    int tab_artists_entry -> tab_artists_entry
    int tab_genres -> tab_genres
    int tab_genres_entry -> tab_genres_entry
    int tab_playlists -> tab_playlists
    int tab_playlists_entry -> tab_playlists_entry
    int tab_recent -> tab_recent
    int tab_recent_entry -> tab_recent_entry
    int tab_songs -> tab_songs
    int tab_songs_entry -> tab_songs_entry
    int tab_visibility_summary -> tab_visibility_summary
    int tab_visibility_title -> tab_visibility_title
    int themes -> themes
    int track_header -> track_header
    int track_removed_from_playlist -> track_removed_from_playlist
    int unknown -> unknown
    int use_as_ringtone -> use_as_ringtone
    int version -> version
    int visual_bargraph -> visual_bargraph
    int visual_bargraph_entry -> visual_bargraph_entry
    int visual_none -> visual_none
    int visual_none_entry -> visual_none_entry
    int visual_solidbargraph -> visual_solidbargraph
    int visual_solidbargraph_entry -> visual_solidbargraph_entry
    int visual_waveform -> visual_waveform
    int visual_waveform_entry -> visual_waveform_entry
    int visualizer_summary -> visualizer_summary
    int visualizer_title -> visualizer_title
    int widget_style_dark -> widget_style_dark
    int widget_style_light -> widget_style_light
    int widget_style_summary -> widget_style_summary
    int widget_style_title -> widget_style_title
com.energy.energyMusic.R$style -> com.energy.energyMusic.R$style:
    int Apollo_Holo -> Apollo_Holo
    int Apollo_Holo_Light -> Apollo_Holo_Light
    int AudioPlayerButton -> AudioPlayerButton
    int AudioPlayerText -> AudioPlayerText
    int BottomActionBarItem -> BottomActionBarItem
    int BottomActionBarText -> BottomActionBarText
    int CustomActionBarTheme -> CustomActionBarTheme
    int FourByTwoMediaButton -> FourByTwoMediaButton
    int GridViewTextItem -> GridViewTextItem
    int GridviewShadowedText -> GridviewShadowedText
    int HalfText -> HalfText
    int HeaderText -> HeaderText
    int MyActionBar -> MyActionBar
    int OverFlow -> OverFlow
    int OverFlowHolo -> OverFlowHolo
    int OverFlowHolo_Light -> OverFlowHolo_Light
    int PeakMeter -> PeakMeter
    int SeparatorTextViewStyle -> SeparatorTextViewStyle
    int ShadowedText -> ShadowedText
    int StatusBarButton -> StatusBarButton
    int StatusBarText -> StatusBarText
    int Tabs -> Tabs
    int Theme_Light_Translucent -> Theme_Light_Translucent
    int Theme_Light_Translucent_Dialog -> Theme_Light_Translucent_Dialog
    int Theme_QuickQueue -> Theme_QuickQueue
    int Topborderline -> Topborderline
    int WindowTitleBackground -> WindowTitleBackground
com.energy.energyMusic.R$styleable -> com.energy.energyMusic.R$styleable:
    int[] DragSortListView -> DragSortListView
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_fling_handle_id -> DragSortListView_fling_handle_id
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
    int[] SlidingUpPanelLayout -> SlidingUpPanelLayout
    int SlidingUpPanelLayout_dragView -> SlidingUpPanelLayout_dragView
    int SlidingUpPanelLayout_fadeColor -> SlidingUpPanelLayout_fadeColor
    int SlidingUpPanelLayout_flingVelocity -> SlidingUpPanelLayout_flingVelocity
    int SlidingUpPanelLayout_overlay -> SlidingUpPanelLayout_overlay
    int SlidingUpPanelLayout_panelHeight -> SlidingUpPanelLayout_panelHeight
    int SlidingUpPanelLayout_paralaxOffset -> SlidingUpPanelLayout_paralaxOffset
    int SlidingUpPanelLayout_shadowHeight -> SlidingUpPanelLayout_shadowHeight
com.energy.energyMusic.R$xml -> com.energy.energyMusic.R$xml:
    int appwidget1x1_info -> appwidget1x1_info
    int appwidget4x1_info -> appwidget4x1_info
    int appwidget4x2_info -> appwidget4x2_info
    int searchable -> searchable
    int settings -> settings
com.energy.energyMusic.activities.MusicLibrary -> com.energy.energyMusic.activities.MusicLibrary:
    com.sothree.slidinguppanel.SlidingUpPanelLayout mPanel -> o
    com.energy.energyMusic.service.ServiceToken mToken -> p
    java.lang.String SAVED_STATE_ACTION_BAR_HIDDEN -> SAVED_STATE_ACTION_BAR_HIDDEN
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment mBActionbar -> n
    boolean isAlreadyStarted -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void initPager() -> initPager
    void initScrollableTabs(android.support.v4.view.ViewPager) -> initScrollableTabs
    void initActionBar() -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void shuffleAll() -> shuffleAll
    boolean access$000(com.energy.energyMusic.activities.MusicLibrary) -> a
    com.sothree.slidinguppanel.SlidingUpPanelLayout access$100(com.energy.energyMusic.activities.MusicLibrary) -> b
    boolean access$002(com.energy.energyMusic.activities.MusicLibrary,boolean) -> a
com.energy.energyMusic.activities.MusicLibrary$1 -> com.energy.energyMusic.activities.a:
    com.energy.energyMusic.activities.MusicLibrary this$0 -> a
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelAnchored(android.view.View) -> onPanelAnchored
com.energy.energyMusic.activities.MusicLibrary$2 -> com.energy.energyMusic.activities.b:
    com.energy.energyMusic.activities.MusicLibrary this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.energy.energyMusic.activities.PlayExternal -> com.energy.energyMusic.activities.PlayExternal:
    com.energy.energyMusic.service.ServiceToken mToken -> a
    android.net.Uri mUri -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void play(android.net.Uri) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void playOrEnqueuFile(java.lang.String,long,boolean) -> a
    void openFile(java.lang.String) -> a
    void access$000(com.energy.energyMusic.activities.PlayExternal,java.lang.String,long,boolean) -> a
com.energy.energyMusic.activities.PlayExternal$1 -> com.energy.energyMusic.activities.c:
    java.lang.String val$file -> a
    long val$id -> b
    com.energy.energyMusic.activities.PlayExternal this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.activities.QueryBrowserActivity -> com.energy.energyMusic.activities.QueryBrowserActivity:
    com.energy.energyMusic.activities.QueryBrowserActivity$QueryListAdapter mAdapter -> a
    boolean mAdapterSent -> b
    java.lang.String mFilterString -> c
    com.energy.energyMusic.service.ServiceToken mToken -> d
    android.widget.ListView mTrackList -> e
    android.database.Cursor mQueryCursor -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onDestroy() -> onDestroy
    void init(android.database.Cursor) -> init
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    android.database.Cursor getQueryCursor(android.content.AsyncQueryHandler,java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.database.Cursor access$100(com.energy.energyMusic.activities.QueryBrowserActivity) -> a
    android.database.Cursor access$102(com.energy.energyMusic.activities.QueryBrowserActivity,android.database.Cursor) -> a
    android.database.Cursor access$200(com.energy.energyMusic.activities.QueryBrowserActivity,android.content.AsyncQueryHandler,java.lang.String) -> a
com.energy.energyMusic.activities.QueryBrowserActivity$QueryListAdapter -> com.energy.energyMusic.activities.d:
    com.energy.energyMusic.activities.QueryBrowserActivity mActivity -> a
    android.content.AsyncQueryHandler mQueryHandler -> b
    java.lang.String mConstraint -> c
    boolean mConstraintIsValid -> d
    void setActivity(com.energy.energyMusic.activities.QueryBrowserActivity) -> setActivity
    android.content.AsyncQueryHandler getQueryHandler() -> getQueryHandler
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    com.energy.energyMusic.activities.QueryBrowserActivity access$000(com.energy.energyMusic.activities.QueryBrowserActivity$QueryListAdapter) -> a
com.energy.energyMusic.activities.QueryBrowserActivity$QueryListAdapter$QueryHandler -> com.energy.energyMusic.activities.e:
    com.energy.energyMusic.activities.QueryBrowserActivity$QueryListAdapter this$0 -> a
    void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
com.energy.energyMusic.activities.QuickQueue -> com.energy.energyMusic.activities.QuickQueue:
    void onCreate(android.os.Bundle) -> onCreate
com.energy.energyMusic.activities.SimpleEq -> com.energy.energyMusic.activities.SimpleEq:
    android.widget.SeekBar bBoost -> n
    android.widget.CheckBox bBoostEnable -> o
    android.widget.CheckBox eQEnable -> p
    com.energy.energyMusic.views.VerticalSeekBar[] SeekBars -> q
    android.widget.TextView[] SeekBarLabels -> r
    android.content.SharedPreferences mPreferences -> s
    void onCreate(android.os.Bundle) -> onCreate
    void initEqualizerValues() -> initEqualizerValues
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.energy.energyMusic.activities.TracksBrowser -> com.energy.energyMusic.activities.TracksBrowser:
    android.os.Bundle bundle -> o
    android.content.Intent intent -> p
    java.lang.String mimeType -> q
    com.energy.energyMusic.service.ServiceToken mToken -> r
    int RESULT_LOAD_IMAGE -> s
    com.energy.energyMusic.cache.ImageProvider mImageProvider -> t
    android.support.v4.view.ViewPager mViewPager -> u
    android.widget.ImageButton mChangeButton -> v
    com.sothree.slidinguppanel.SlidingUpPanelLayout mPanel -> w
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment mBActionbar -> n
    android.content.BroadcastReceiver mMediaStatusReceiver -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onSearchWeb() -> onSearchWeb
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void whatBundle(android.os.Bundle) -> whatBundle
    void initColorstrip() -> b
    void initActionBar() -> c
    void onToggleButton() -> d
    void initUpperHalf() -> e
    void initPager() -> f
    java.lang.String getArtist() -> getArtist
    java.lang.String getAlbum() -> getAlbum
    java.lang.String getAlbumId() -> getAlbumId
    java.lang.String getNumSongs() -> getNumSongs
    java.lang.String getNumAlbums() -> getNumAlbums
    java.lang.String getGenre() -> getGenre
    java.lang.String getPlaylist() -> getPlaylist
    void setTitle() -> g
    void access$000(com.energy.energyMusic.activities.TracksBrowser) -> a
com.energy.energyMusic.activities.TracksBrowser$1 -> com.energy.energyMusic.activities.f:
    com.energy.energyMusic.activities.TracksBrowser this$0 -> a
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelAnchored(android.view.View) -> onPanelAnchored
com.energy.energyMusic.activities.TracksBrowser$2 -> com.energy.energyMusic.activities.g:
    com.energy.energyMusic.activities.TracksBrowser this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.activities.TracksBrowser$3 -> com.energy.energyMusic.activities.h:
    com.energy.energyMusic.activities.TracksBrowser this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.activities.TracksBrowser$PageListener -> com.energy.energyMusic.activities.i:
    com.energy.energyMusic.activities.TracksBrowser this$0 -> a
    void onPageSelected(int) -> onPageSelected
com.energy.energyMusic.app.widgets.AppWidget11 -> com.energy.energyMusic.app.widgets.AppWidget11:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.energy.energyMusic.app.widgets.AppWidget11 sInstance -> a
    com.energy.energyMusic.app.widgets.AppWidget11 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void defaultAppWidget(android.content.Context,int[]) -> a
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    boolean hasInstances(android.content.Context) -> a
    void notifyChange(com.energy.energyMusic.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.energy.energyMusic.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.energy.energyMusic.app.widgets.AppWidget41 -> com.energy.energyMusic.app.widgets.AppWidget41:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.energy.energyMusic.app.widgets.AppWidget41 sInstance -> a
    com.energy.energyMusic.app.widgets.AppWidget41 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void defaultAppWidget(android.content.Context,int[]) -> a
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    boolean hasInstances(android.content.Context) -> a
    void notifyChange(com.energy.energyMusic.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.energy.energyMusic.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.energy.energyMusic.app.widgets.AppWidget42 -> com.energy.energyMusic.app.widgets.AppWidget42:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.energy.energyMusic.app.widgets.AppWidget42 sInstance -> a
    com.energy.energyMusic.app.widgets.AppWidget42 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void defaultAppWidget(android.content.Context,int[]) -> a
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    boolean hasInstances(android.content.Context) -> a
    void notifyChange(com.energy.energyMusic.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.energy.energyMusic.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.energy.energyMusic.cache.ImageCache -> com.energy.energyMusic.cache.ImageCache:
    java.lang.String TAG -> a
    android.util.LruCache mLruCache -> b
    com.energy.energyMusic.cache.ImageCache sInstance -> c
    com.energy.energyMusic.cache.ImageCache getInstance(android.content.Context) -> getInstance
    void init(android.content.Context) -> init
    com.energy.energyMusic.cache.ImageCache findOrCreateCache(android.app.Activity) -> findOrCreateCache
    void add(java.lang.String,android.graphics.Bitmap) -> add
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clearMemCache() -> clearMemCache
com.energy.energyMusic.cache.ImageCache$1 -> com.energy.energyMusic.cache.a:
    com.energy.energyMusic.cache.ImageCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.energy.energyMusic.cache.ImageCache$RetainFragment -> com.energy.energyMusic.cache.ImageCache$RetainFragment:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
com.energy.energyMusic.cache.ImageInfo -> com.energy.energyMusic.cache.ImageInfo:
    java.lang.String type -> type
    java.lang.String source -> source
    java.lang.String size -> size
    java.lang.String[] data -> data
com.energy.energyMusic.cache.ImageProvider -> com.energy.energyMusic.cache.ImageProvider:
    com.energy.energyMusic.cache.ImageCache memCache -> a
    java.util.Map pendingImagesMap -> b
    java.util.Set unavailable -> c
    android.content.Context mContext -> d
    int thumbSize -> e
    com.energy.energyMusic.cache.ImageProvider mInstance -> f
    com.energy.energyMusic.cache.ImageProvider getInstance(android.app.Activity) -> getInstance
    void setImageCache(com.energy.energyMusic.cache.ImageCache) -> setImageCache
    void loadImage(android.widget.ImageView,com.energy.energyMusic.cache.ImageInfo) -> loadImage
    boolean setCachedBitmap(android.widget.ImageView,java.lang.String) -> a
    void handleBitmapUnavailable(android.widget.ImageView,java.lang.String) -> b
    void setLoadedBitmap(android.widget.ImageView,android.graphics.Bitmap,java.lang.String) -> a
    void asyncLoad(java.lang.String,android.widget.ImageView,android.os.AsyncTask) -> a
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    void clearFromMemoryCache(java.lang.String) -> clearFromMemoryCache
    void clearAllCaches() -> clearAllCaches
com.energy.energyMusic.helpers.AddIdCursorLoader -> com.energy.energyMusic.helpers.AddIdCursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
com.energy.energyMusic.helpers.DomElement -> com.energy.energyMusic.helpers.DomElement:
    org.w3c.dom.Element e -> a
    org.w3c.dom.Element getElement() -> getElement
    boolean hasAttribute(java.lang.String) -> hasAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getText() -> getText
    boolean hasChild(java.lang.String) -> hasChild
    com.energy.energyMusic.helpers.DomElement getChild(java.lang.String) -> getChild
    java.lang.String getChildText(java.lang.String) -> getChildText
    java.util.List getChildren() -> getChildren
    java.util.List getChildren(java.lang.String) -> getChildren
    java.lang.String getTagName() -> getTagName
com.energy.energyMusic.helpers.GetBitmapTask -> com.energy.energyMusic.helpers.GetBitmapTask:
    java.lang.ref.WeakReference mListenerReference -> a
    java.lang.ref.WeakReference mContextReference -> b
    com.energy.energyMusic.cache.ImageInfo mImageInfo -> c
    int mThumbSize -> d
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.energy.energyMusic.helpers.GetBitmapTask$OnBitmapReadyListener -> com.energy.energyMusic.helpers.GetBitmapTask$OnBitmapReadyListener:
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
com.energy.energyMusic.helpers.RefreshableFragment -> com.energy.energyMusic.helpers.RefreshableFragment:
    void refresh() -> refresh
com.energy.energyMusic.helpers.lastfm.Album -> com.energy.energyMusic.helpers.lastfm.Album:
    com.energy.energyMusic.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String artist -> b
    java.lang.String getArtist() -> getArtist
    com.energy.energyMusic.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String) -> getInfo
    com.energy.energyMusic.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getInfo
    java.lang.String access$202(com.energy.energyMusic.helpers.lastfm.Album,java.lang.String) -> a
    java.lang.String access$200(com.energy.energyMusic.helpers.lastfm.Album) -> a
com.energy.energyMusic.helpers.lastfm.Album$1 -> com.energy.energyMusic.helpers.lastfm.a:
com.energy.energyMusic.helpers.lastfm.Album$AlbumFactory -> com.energy.energyMusic.helpers.lastfm.b:
    com.energy.energyMusic.helpers.lastfm.Album createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
com.energy.energyMusic.helpers.lastfm.Artist -> com.energy.energyMusic.helpers.lastfm.Artist:
    com.energy.energyMusic.helpers.lastfm.ItemFactory FACTORY -> a
    com.energy.energyMusic.helpers.lastfm.Artist getInfo(java.lang.String,java.lang.String) -> getInfo
    com.energy.energyMusic.helpers.lastfm.Artist getInfo(java.lang.String,java.util.Locale,java.lang.String) -> getInfo
com.energy.energyMusic.helpers.lastfm.Artist$1 -> com.energy.energyMusic.helpers.lastfm.c:
com.energy.energyMusic.helpers.lastfm.Artist$ArtistFactory -> com.energy.energyMusic.helpers.lastfm.d:
    com.energy.energyMusic.helpers.lastfm.Artist createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
com.energy.energyMusic.helpers.lastfm.Caller -> com.energy.energyMusic.helpers.lastfm.Caller:
    com.energy.energyMusic.helpers.lastfm.Caller instance -> a
    java.lang.String apiRootUrl -> b
    java.lang.String userAgent -> c
    com.energy.energyMusic.helpers.lastfm.Result lastResult -> d
    com.energy.energyMusic.helpers.lastfm.Caller getInstance() -> getInstance
    com.energy.energyMusic.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.lang.String[]) -> call
    com.energy.energyMusic.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map) -> call
    com.energy.energyMusic.helpers.lastfm.Result call(java.lang.String,com.energy.energyMusic.helpers.lastfm.Session,java.lang.String[]) -> call
    com.energy.energyMusic.helpers.lastfm.Result call(java.lang.String,com.energy.energyMusic.helpers.lastfm.Session,java.util.Map) -> call
    com.energy.energyMusic.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map,com.energy.energyMusic.helpers.lastfm.Session) -> a
    java.net.HttpURLConnection openConnection(java.lang.String) -> openConnection
    java.net.HttpURLConnection openPostConnection(java.lang.String,java.util.Map) -> a
    java.io.InputStream getInputStreamFromConnection(java.net.HttpURLConnection) -> a
    com.energy.energyMusic.helpers.lastfm.Result createResultFromInputStream(java.io.InputStream) -> a
    javax.xml.parsers.DocumentBuilder newDocumentBuilder() -> a
    java.lang.String buildPostBody(java.lang.String,java.util.Map,java.lang.String[]) -> a
com.energy.energyMusic.helpers.lastfm.Image -> com.energy.energyMusic.helpers.lastfm.Image:
    com.energy.energyMusic.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String url -> b
    java.lang.String getUrl() -> getUrl
    java.lang.String access$202(com.energy.energyMusic.helpers.lastfm.Image,java.lang.String) -> a
com.energy.energyMusic.helpers.lastfm.Image$1 -> com.energy.energyMusic.helpers.lastfm.e:
com.energy.energyMusic.helpers.lastfm.Image$ImageFactory -> com.energy.energyMusic.helpers.lastfm.f:
    com.energy.energyMusic.helpers.lastfm.Image createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
com.energy.energyMusic.helpers.lastfm.ImageHolder -> com.energy.energyMusic.helpers.lastfm.ImageHolder:
    java.util.Map imageUrls -> imageUrls
    java.util.Set availableSizes() -> availableSizes
    java.lang.String getImageURL(com.energy.energyMusic.helpers.lastfm.ImageSize) -> getImageURL
    void loadImages(com.energy.energyMusic.helpers.lastfm.ImageHolder,com.energy.energyMusic.helpers.DomElement) -> loadImages
    java.lang.String getLargestImage() -> getLargestImage
com.energy.energyMusic.helpers.lastfm.ImageSize -> com.energy.energyMusic.helpers.lastfm.ImageSize:
    com.energy.energyMusic.helpers.lastfm.ImageSize SMALL -> SMALL
    com.energy.energyMusic.helpers.lastfm.ImageSize MEDIUM -> MEDIUM
    com.energy.energyMusic.helpers.lastfm.ImageSize LARGE -> LARGE
    com.energy.energyMusic.helpers.lastfm.ImageSize EXTRALARGE -> EXTRALARGE
    com.energy.energyMusic.helpers.lastfm.ImageSize MEGA -> MEGA
    com.energy.energyMusic.helpers.lastfm.ImageSize[] $VALUES -> a
    com.energy.energyMusic.helpers.lastfm.ImageSize[] values() -> values
    com.energy.energyMusic.helpers.lastfm.ImageSize valueOf(java.lang.String) -> valueOf
com.energy.energyMusic.helpers.lastfm.ItemFactory -> com.energy.energyMusic.helpers.lastfm.g:
    java.lang.Object createItemFromElement(com.energy.energyMusic.helpers.DomElement) -> createItemFromElement
com.energy.energyMusic.helpers.lastfm.ItemFactoryBuilder -> com.energy.energyMusic.helpers.lastfm.h:
    com.energy.energyMusic.helpers.lastfm.ItemFactoryBuilder INSTANCE -> a
    java.util.Map factories -> b
    com.energy.energyMusic.helpers.lastfm.ItemFactoryBuilder getFactoryBuilder() -> getFactoryBuilder
    void addItemFactory(java.lang.Class,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> addItemFactory
    com.energy.energyMusic.helpers.lastfm.ItemFactory getItemFactory(java.lang.Class) -> getItemFactory
com.energy.energyMusic.helpers.lastfm.MusicEntry -> com.energy.energyMusic.helpers.lastfm.MusicEntry:
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String mbid -> mbid
    java.lang.String id -> id
    int percentageChange -> percentageChange
    java.util.Collection tags -> tags
    java.lang.String getMbid() -> getMbid
    java.lang.String getName() -> getName
    java.lang.String getId() -> getId
    java.lang.String getUrl() -> getUrl
    java.util.Collection getTags() -> getTags
    java.lang.String toString() -> toString
    void loadStandardInfo(com.energy.energyMusic.helpers.lastfm.MusicEntry,com.energy.energyMusic.helpers.DomElement) -> loadStandardInfo
com.energy.energyMusic.helpers.lastfm.PaginatedResult -> com.energy.energyMusic.helpers.lastfm.PaginatedResult:
    int page -> a
    int totalPages -> b
    java.util.Collection pageResults -> c
    int getPage() -> getPage
    java.util.Collection getPageResults() -> getPageResults
    int getTotalPages() -> getTotalPages
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.energy.energyMusic.helpers.lastfm.ResponseBuilder -> com.energy.energyMusic.helpers.lastfm.ResponseBuilder:
    com.energy.energyMusic.helpers.lastfm.ItemFactory getItemFactory(java.lang.Class) -> a
    java.util.Collection buildCollection(com.energy.energyMusic.helpers.lastfm.Result,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.energy.energyMusic.helpers.lastfm.Result,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> buildCollection
    java.util.Collection buildCollection(com.energy.energyMusic.helpers.DomElement,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.energy.energyMusic.helpers.DomElement,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> buildCollection
    com.energy.energyMusic.helpers.lastfm.PaginatedResult buildPaginatedResult(com.energy.energyMusic.helpers.lastfm.Result,java.lang.Class) -> buildPaginatedResult
    com.energy.energyMusic.helpers.lastfm.PaginatedResult buildPaginatedResult(com.energy.energyMusic.helpers.lastfm.Result,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    com.energy.energyMusic.helpers.lastfm.PaginatedResult buildPaginatedResult(com.energy.energyMusic.helpers.DomElement,com.energy.energyMusic.helpers.DomElement,java.lang.Class) -> buildPaginatedResult
    com.energy.energyMusic.helpers.lastfm.PaginatedResult buildPaginatedResult(com.energy.energyMusic.helpers.DomElement,com.energy.energyMusic.helpers.DomElement,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    java.lang.Object buildItem(com.energy.energyMusic.helpers.lastfm.Result,java.lang.Class) -> buildItem
    java.lang.Object buildItem(com.energy.energyMusic.helpers.lastfm.Result,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> buildItem
    java.lang.Object buildItem(com.energy.energyMusic.helpers.DomElement,java.lang.Class) -> buildItem
    java.lang.Object buildItem(com.energy.energyMusic.helpers.DomElement,com.energy.energyMusic.helpers.lastfm.ItemFactory) -> a
com.energy.energyMusic.helpers.lastfm.Result -> com.energy.energyMusic.helpers.lastfm.Result:
    com.energy.energyMusic.helpers.lastfm.Result$Status status -> status
    java.lang.String errorMessage -> errorMessage
    int errorCode -> errorCode
    int httpErrorCode -> httpErrorCode
    org.w3c.dom.Document resultDocument -> resultDocument
    com.energy.energyMusic.helpers.lastfm.Result createOkResult(org.w3c.dom.Document) -> a
    com.energy.energyMusic.helpers.lastfm.Result createHttpErrorResult(int,java.lang.String) -> a
    com.energy.energyMusic.helpers.lastfm.Result createRestErrorResult(int,java.lang.String) -> b
    boolean isSuccessful() -> isSuccessful
    int getErrorCode() -> getErrorCode
    int getHttpErrorCode() -> getHttpErrorCode
    com.energy.energyMusic.helpers.lastfm.Result$Status getStatus() -> getStatus
    org.w3c.dom.Document getResultDocument() -> getResultDocument
    java.lang.String getErrorMessage() -> getErrorMessage
    com.energy.energyMusic.helpers.DomElement getContentElement() -> getContentElement
    java.lang.String toString() -> toString
com.energy.energyMusic.helpers.lastfm.Result$Status -> com.energy.energyMusic.helpers.lastfm.Result$Status:
    com.energy.energyMusic.helpers.lastfm.Result$Status OK -> OK
    com.energy.energyMusic.helpers.lastfm.Result$Status FAILED -> FAILED
    com.energy.energyMusic.helpers.lastfm.Result$Status[] $VALUES -> a
    com.energy.energyMusic.helpers.lastfm.Result$Status[] values() -> values
    com.energy.energyMusic.helpers.lastfm.Result$Status valueOf(java.lang.String) -> valueOf
com.energy.energyMusic.helpers.lastfm.Session -> com.energy.energyMusic.helpers.lastfm.Session:
    java.lang.String apiKey -> a
    java.lang.String secret -> b
    java.lang.String username -> c
    java.lang.String key -> d
    boolean subscriber -> e
    com.energy.energyMusic.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String) -> createSession
    com.energy.energyMusic.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> createSession
    java.lang.String getSecret() -> getSecret
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getKey() -> getKey
    boolean isSubscriber() -> isSubscriber
    java.lang.String getUsername() -> getUsername
    java.lang.String toString() -> toString
com.energy.energyMusic.helpers.utils.ApolloUtils -> com.energy.energyMusic.helpers.utils.ApolloUtils:
    void setBackground(android.view.View,android.graphics.Bitmap) -> setBackground
    android.view.View setHeaderLayout(java.lang.String,android.database.Cursor,android.app.Activity) -> setHeaderLayout
    void runnableBackground(android.widget.ImageView,android.graphics.Bitmap) -> runnableBackground
    boolean isOnline(android.content.Context) -> isOnline
    boolean isTablet(android.content.Context) -> isTablet
    void showUpTitleOnly(android.app.ActionBar) -> showUpTitleOnly
    void setListPadding(android.support.v4.app.Fragment,android.widget.ListView,int,int,int,int) -> setListPadding
    boolean isAlbum(java.lang.String) -> isAlbum
    boolean isArtist(java.lang.String) -> isArtist
    boolean isGenre(java.lang.String) -> isGenre
    void setArtistId(java.lang.String,long,java.lang.String,android.content.Context) -> setArtistId
    java.lang.Long getArtistId(java.lang.String,java.lang.String,android.content.Context) -> getArtistId
    void shopFor(android.content.Context,java.lang.String) -> shopFor
    java.lang.String escapeForFileSystem(java.lang.String) -> escapeForFileSystem
    boolean downloadFile(java.lang.String,java.io.File) -> downloadFile
    void showToast(int,android.widget.Toast,android.content.Context) -> showToast
    void startTracksBrowser(java.lang.String,long,android.database.Cursor,android.content.Context) -> startTracksBrowser
com.energy.energyMusic.helpers.utils.ApolloUtils$1 -> com.energy.energyMusic.helpers.utils.a:
    android.widget.ImageView val$view -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.energy.energyMusic.helpers.utils.ImageUtils -> com.energy.energyMusic.helpers.utils.ImageUtils:
    java.io.File getFile(android.content.Context,com.energy.energyMusic.cache.ImageInfo) -> a
    android.graphics.Bitmap getNormalImageFromDisk(android.content.Context,com.energy.energyMusic.cache.ImageInfo) -> getNormalImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,com.energy.energyMusic.cache.ImageInfo,int) -> getThumbImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,java.io.File,int) -> getThumbImageFromDisk
    java.io.File getImageFromGallery(android.content.Context,com.energy.energyMusic.cache.ImageInfo) -> getImageFromGallery
    java.io.File getImageFromWeb(android.content.Context,com.energy.energyMusic.cache.ImageInfo) -> getImageFromWeb
    java.io.File getImageFromMediaStore(android.content.Context,com.energy.energyMusic.cache.ImageInfo) -> getImageFromMediaStore
    void deleteDiskCache(android.content.Context) -> deleteDiskCache
    java.lang.String createShortTag(com.energy.energyMusic.cache.ImageInfo) -> createShortTag
com.energy.energyMusic.helpers.utils.MusicUtils -> com.energy.energyMusic.helpers.utils.MusicUtils:
    java.lang.StringBuilder sFormatBuilder -> a
    java.util.Formatter sFormatter -> b
    com.energy.energyMusic.IApolloService mService -> mService
    java.util.HashMap sConnectionMap -> c
    long[] sEmptyList -> d
    java.lang.Object[] sTimeArgs -> e
    android.content.ContentValues[] sContentValuesCache -> f
    android.media.audiofx.Equalizer mEqualizer -> g
    android.media.audiofx.BassBoost mBoost -> h
    com.energy.energyMusic.service.ServiceToken bindToService(android.app.Activity) -> bindToService
    com.energy.energyMusic.service.ServiceToken bindToService(android.content.Context,android.content.ServiceConnection) -> bindToService
    void unbindFromService(com.energy.energyMusic.service.ServiceToken) -> unbindFromService
    void releaseEqualizer() -> releaseEqualizer
    void initEqualizer(android.media.MediaPlayer,android.content.Context) -> initEqualizer
    int[] getEqualizerFrequencies() -> getEqualizerFrequencies
    void updateEqualizerSettings(android.content.Context) -> updateEqualizerSettings
    void moveQueueItem(int,int) -> moveQueueItem
    java.lang.String makeAlbumsLabel(android.content.Context,int,int,boolean) -> makeAlbumsLabel
    int getCardId(android.content.Context) -> getCardId
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int) -> query
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    void shuffleAll(android.content.Context,android.database.Cursor) -> shuffleAll
    void playAll(android.content.Context,android.database.Cursor) -> playAll
    void playAll(android.content.Context,android.database.Cursor,int) -> playAll
    void playAll(android.content.Context,long[],int) -> playAll
    void playAll(android.content.Context,android.database.Cursor,int,boolean) -> a
    long[] getSongListForCursor(android.database.Cursor) -> getSongListForCursor
    long[] getRandomSongListForCursor(android.database.Cursor) -> getRandomSongListForCursor
    void playAll(android.content.Context,long[],int,boolean) -> a
    long[] getQueue() -> getQueue
    int getIntPref(android.content.Context,java.lang.String,int) -> getIntPref
    long[] getSongListForArtist(android.content.Context,long) -> getSongListForArtist
    long[] getSongListForAlbum(android.content.Context,long) -> getSongListForAlbum
    long[] getSongListForGenre(android.content.Context,long) -> getSongListForGenre
    long[] getSongListForPlaylist(android.content.Context,long) -> getSongListForPlaylist
    long[] getSongList(java.lang.String,android.content.Context,long) -> getSongList
    long createPlaylist(android.content.Context,java.lang.String) -> createPlaylist
    long getFavoritesId(android.content.Context) -> getFavoritesId
    void setRingtone(android.content.Context,long) -> setRingtone
    void clearPlaylist(android.content.Context,int) -> clearPlaylist
    void addToPlaylist(android.content.Context,long[],long) -> addToPlaylist
    void makeInsertItems(long[],int,int,int) -> a
    void toggleFavorite() -> toggleFavorite
    void addToFavorites(android.content.Context,long) -> addToFavorites
    boolean isFavorite(android.content.Context,long) -> isFavorite
    void removeFromFavorites(android.content.Context,long) -> removeFromFavorites
    void setFavoriteImage(android.widget.ImageButton) -> setFavoriteImage
    void renamePlaylist(android.content.Context,long,java.lang.String) -> renamePlaylist
    void addToCurrentPlaylist(android.content.Context,long[]) -> addToCurrentPlaylist
    java.lang.String makeTimeString(android.content.Context,long) -> makeTimeString
    long getCurrentAlbumId() -> getCurrentAlbumId
    long getCurrentArtistId() -> getCurrentArtistId
    long getCurrentAudioId() -> getCurrentAudioId
    java.lang.String getArtistName() -> getArtistName
    java.lang.String getAlbumName() -> getAlbumName
    java.lang.String getTrackName() -> getTrackName
    long getDuration() -> getDuration
    void doSearch(android.content.Context,android.database.Cursor,int) -> doSearch
    void doSearch(android.content.Context,android.database.Cursor,java.lang.String) -> doSearch
    void removeAllTracks() -> removeAllTracks
    int removeTrack(long) -> removeTrack
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName(android.content.Context,long,boolean) -> getArtistName
    java.lang.String getAlbumName(android.content.Context,long,boolean) -> getAlbumName
    java.lang.String getPlaylistName(android.content.Context,long) -> getPlaylistName
    java.lang.String getGenreName(android.content.Context,long,boolean) -> getGenreName
    java.lang.String parseGenreName(android.content.Context,java.lang.String) -> parseGenreName
    boolean isPlaying() -> isPlaying
    int getQueuePosition() -> getQueuePosition
    void makePlaylistList(android.content.Context,boolean,java.util.List) -> makePlaylistList
    void notifyWidgets(java.lang.String) -> notifyWidgets
com.energy.energyMusic.helpers.utils.StringUtilities -> com.energy.energyMusic.helpers.utils.StringUtilities:
    java.security.MessageDigest digest -> a
    java.util.regex.Pattern MBID_PATTERN -> b
    java.util.regex.Pattern MD5_PATTERN -> c
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    boolean isMbid(java.lang.String) -> isMbid
    java.util.Map map(java.lang.String[]) -> map
    java.lang.String cleanUp(java.lang.String) -> cleanUp
    boolean isMD5(java.lang.String) -> isMD5
    boolean convertToBoolean(java.lang.String) -> convertToBoolean
    java.lang.String convertFromBoolean(boolean) -> convertFromBoolean
com.energy.energyMusic.helpers.utils.VisualizerUtils -> com.energy.energyMusic.helpers.utils.VisualizerUtils:
    android.media.audiofx.Visualizer mVisualizer -> a
    java.lang.ref.WeakReference mView -> b
    void updateVisualizerView(java.lang.ref.WeakReference) -> updateVisualizerView
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void updateVisualizer(byte[]) -> updateVisualizer
    void releaseVisualizer() -> releaseVisualizer
    void initVisualizer(android.media.MediaPlayer) -> initVisualizer
com.energy.energyMusic.helpers.utils.VisualizerUtils$1 -> com.energy.energyMusic.helpers.utils.b:
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
com.energy.energyMusic.helpers.visualizer.AudioData -> com.energy.energyMusic.helpers.visualizer.AudioData:
    byte[] bytes -> bytes
com.energy.energyMusic.helpers.visualizer.BarGraphRenderer -> com.energy.energyMusic.helpers.visualizer.BarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.energy.energyMusic.helpers.visualizer.FFTData -> com.energy.energyMusic.helpers.visualizer.FFTData:
    byte[] bytes -> bytes
com.energy.energyMusic.helpers.visualizer.Renderer -> com.energy.energyMusic.helpers.visualizer.Renderer:
    float[] mPoints -> mPoints
    float[] mFFTPoints -> mFFTPoints
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
    void render(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.AudioData,android.graphics.Rect) -> render
    void render(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.FFTData,android.graphics.Rect) -> render
com.energy.energyMusic.helpers.visualizer.SolidBarGraphRenderer -> com.energy.energyMusic.helpers.visualizer.SolidBarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.energy.energyMusic.helpers.visualizer.WaveformRenderer -> com.energy.energyMusic.helpers.visualizer.WaveformRenderer:
    float amplitude -> a
    android.content.Context mContext -> b
    android.graphics.Paint mBrightPaint -> c
    android.graphics.Paint paintBrightBlur -> d
    android.graphics.Paint mPaint -> e
    android.graphics.Paint paintBlur -> f
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.energy.energyMusic.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.energy.energyMusic.menu.PlaylistDialog -> com.energy.energyMusic.menu.PlaylistDialog:
    android.app.AlertDialog mPlaylistDialog -> n
    java.lang.String action -> o
    android.widget.EditText mPlaylist -> p
    java.lang.String mDefaultName -> q
    java.lang.String mOriginalName -> r
    long mRenameId -> s
    long[] mList -> t
    android.content.DialogInterface$OnClickListener mRenamePlaylistListener -> u
    android.content.DialogInterface$OnClickListener mCreatePlaylistListener -> v
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onShow(android.content.DialogInterface) -> onShow
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int idForplaylist(java.lang.String) -> b
    java.lang.String makePlaylistName() -> b
    java.lang.String nameForId(long) -> a
    void setSaveButton() -> c
    void onResume() -> onResume
    android.widget.EditText access$000(com.energy.energyMusic.menu.PlaylistDialog) -> a
    long access$100(com.energy.energyMusic.menu.PlaylistDialog) -> b
    int access$200(com.energy.energyMusic.menu.PlaylistDialog,java.lang.String) -> a
    long[] access$300(com.energy.energyMusic.menu.PlaylistDialog) -> c
com.energy.energyMusic.menu.PlaylistDialog$1 -> com.energy.energyMusic.menu.a:
    com.energy.energyMusic.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.menu.PlaylistDialog$2 -> com.energy.energyMusic.menu.b:
    com.energy.energyMusic.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.menu.PlaylistDialog$3 -> com.energy.energyMusic.menu.c:
    com.energy.energyMusic.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.menu.PlaylistPicker -> com.energy.energyMusic.menu.PlaylistPicker:
    android.app.AlertDialog mPlayListPickerDialog -> d
    java.util.List mAllPlayLists -> a
    java.util.List mPlayListNames -> b
    long[] mList -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.energy.energyMusic.menu.PlaylistPickerDialog -> com.energy.energyMusic.menu.PlaylistPickerDialog:
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.preferences.SettingsFragment -> com.energy.energyMusic.preferences.SettingsFragment:
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
com.energy.energyMusic.preferences.SettingsHolder -> com.energy.energyMusic.preferences.SettingsHolder:
    android.content.Context mContext -> a
    com.energy.energyMusic.service.ServiceToken mToken -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initChangeWidgetTheme() -> b
    void initAboutDialog() -> c
    void initDependencies() -> d
    void initDeleteCache() -> e
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
com.energy.energyMusic.preferences.SettingsHolder$1 -> com.energy.energyMusic.preferences.a:
    com.energy.energyMusic.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.energy.energyMusic.preferences.SettingsHolder$2 -> com.energy.energyMusic.preferences.b:
    com.energy.energyMusic.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.energy.energyMusic.preferences.SettingsHolder$3 -> com.energy.energyMusic.preferences.c:
    com.energy.energyMusic.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.energy.energyMusic.preferences.SettingsHolder$4 -> com.energy.energyMusic.preferences.d:
    com.energy.energyMusic.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.energy.energyMusic.preferences.SettingsHolder$4$1 -> com.energy.energyMusic.preferences.e:
    com.energy.energyMusic.preferences.SettingsHolder$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.preferences.SettingsHolder$4$2 -> com.energy.energyMusic.preferences.f:
    com.energy.energyMusic.preferences.SettingsHolder$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.energy.energyMusic.preferences.SharedPreferencesCompat -> com.energy.energyMusic.preferences.SharedPreferencesCompat:
    java.lang.reflect.Method sApplyMethod -> a
    java.lang.reflect.Method findApplyMethod() -> a
    void apply(android.content.SharedPreferences$Editor) -> apply
com.energy.energyMusic.service.ApolloService -> com.energy.energyMusic.service.ApolloService:
    int NOW -> NOW
    int NEXT -> NEXT
    int LAST -> LAST
    int PLAYBACKSERVICE_STATUS -> PLAYBACKSERVICE_STATUS
    int SHUFFLE_NONE -> SHUFFLE_NONE
    int SHUFFLE_NORMAL -> SHUFFLE_NORMAL
    int SHUFFLE_AUTO -> SHUFFLE_AUTO
    int REPEAT_NONE -> REPEAT_NONE
    int REPEAT_CURRENT -> REPEAT_CURRENT
    int REPEAT_ALL -> REPEAT_ALL
    java.lang.String APOLLO_PACKAGE_NAME -> APOLLO_PACKAGE_NAME
    java.lang.String MUSIC_PACKAGE_NAME -> MUSIC_PACKAGE_NAME
    java.lang.String PLAYSTATE_CHANGED -> PLAYSTATE_CHANGED
    java.lang.String META_CHANGED -> META_CHANGED
    java.lang.String FAVORITE_CHANGED -> FAVORITE_CHANGED
    java.lang.String QUEUE_CHANGED -> QUEUE_CHANGED
    java.lang.String REPEATMODE_CHANGED -> REPEATMODE_CHANGED
    java.lang.String SHUFFLEMODE_CHANGED -> SHUFFLEMODE_CHANGED
    java.lang.String PROGRESSBAR_CHANGED -> PROGRESSBAR_CHANGED
    java.lang.String REFRESH_PROGRESSBAR -> REFRESH_PROGRESSBAR
    java.lang.String CYCLEREPEAT_ACTION -> CYCLEREPEAT_ACTION
    java.lang.String TOGGLESHUFFLE_ACTION -> TOGGLESHUFFLE_ACTION
    java.lang.String SERVICECMD -> SERVICECMD
    java.lang.String CMDNAME -> CMDNAME
    java.lang.String CMDTOGGLEPAUSE -> CMDTOGGLEPAUSE
    java.lang.String CMDSTOP -> CMDSTOP
    java.lang.String CMDPAUSE -> CMDPAUSE
    java.lang.String CMDPLAY -> CMDPLAY
    java.lang.String CMDPREVIOUS -> CMDPREVIOUS
    java.lang.String CMDNEXT -> CMDNEXT
    java.lang.String CMDNOTIF -> CMDNOTIF
    java.lang.String CMDTOGGLEFAVORITE -> CMDTOGGLEFAVORITE
    java.lang.String CMDCYCLEREPEAT -> CMDCYCLEREPEAT
    java.lang.String CMDTOGGLESHUFFLE -> CMDTOGGLESHUFFLE
    java.lang.String TOGGLEPAUSE_ACTION -> TOGGLEPAUSE_ACTION
    java.lang.String PAUSE_ACTION -> PAUSE_ACTION
    java.lang.String PREVIOUS_ACTION -> PREVIOUS_ACTION
    java.lang.String NEXT_ACTION -> NEXT_ACTION
    android.app.Notification status -> b
    com.energy.energyMusic.service.ApolloService$MultiPlayer mPlayer -> c
    java.lang.String mFileToPlay -> d
    int mShuffleMode -> e
    int mRepeatMode -> f
    int mMediaMountedCount -> g
    long[] mAutoShuffleList -> h
    long[] mPlayList -> i
    int mPlayListLen -> j
    java.util.Vector mHistory -> k
    android.database.Cursor mCursor -> l
    int mPlayPos -> m
    int mNextPlayPos -> n
    com.energy.energyMusic.service.ApolloService$Shuffler mRand -> o
    int mOpenFailedCounter -> p
    java.lang.String[] mCursorCols -> a
    android.content.BroadcastReceiver mUnmountReceiver -> q
    android.os.PowerManager$WakeLock mWakeLock -> r
    int mServiceStartId -> s
    boolean mServiceInUse -> t
    boolean mIsSupposedToBePlaying -> u
    boolean mQuietMode -> v
    android.media.AudioManager mAudioManager -> w
    boolean mQueueIsSaveable -> x
    boolean mPausedByTransientLossOfFocus -> y
    android.content.SharedPreferences mPreferences -> z
    int mCardId -> A
    com.energy.energyMusic.app.widgets.AppWidget11 mAppWidgetProvider1x1 -> B
    com.energy.energyMusic.app.widgets.AppWidget42 mAppWidgetProvider4x2 -> C
    com.energy.energyMusic.app.widgets.AppWidget41 mAppWidgetProvider4x1 -> D
    java.lang.String mAlbumBitmapTag -> E
    android.graphics.Bitmap mAlbumBitmap -> F
    com.energy.energyMusic.helpers.GetBitmapTask mAlbumBitmapTask -> G
    android.media.RemoteControlClient mRemoteControlClient -> H
    android.os.Handler mMediaplayerHandler -> I
    android.content.BroadcastReceiver mIntentReceiver -> J
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener -> K
    char[] hexdigits -> L
    android.os.Handler mDelayedStopHandler -> M
    android.os.IBinder mBinder -> N
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void saveQueue(boolean) -> a
    void reloadQueue() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    void closeExternalStorageFiles(java.lang.String) -> closeExternalStorageFiles
    void registerExternalStorageListener() -> registerExternalStorageListener
    void notifyChange(java.lang.String) -> notifyChange
    void ensurePlayListCapacity(int) -> a
    void addToPlayList(long[],int) -> a
    void enqueue(long[],int) -> enqueue
    void open(long[],int) -> open
    long[] getQueue() -> getQueue
    android.database.Cursor getCursorForId(long) -> a
    void openCurrentAndNext() -> b
    void setNextTrack() -> c
    boolean open(java.lang.String) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    void play() -> play
    void updateNotification() -> d
    void stop(boolean) -> b
    void stop() -> stop
    void pause() -> pause
    boolean isPlaying() -> isPlaying
    void prev() -> prev
    int getNextPosition(boolean) -> c
    void gotoNext(boolean) -> gotoNext
    void cycleRepeat() -> cycleRepeat
    void toggleShuffle() -> toggleShuffle
    void gotoIdleState() -> e
    void saveBookmarkIfNeeded() -> f
    void doAutoShuffleUpdate() -> g
    boolean wasRecentlyUsed(int,int) -> a
    boolean makeAutoShuffleList() -> h
    int removeTracks(int,int) -> removeTracks
    void moveQueueItem(int,int) -> moveQueueItem
    int removeTracksInternal(int,int) -> b
    void updateAlbumBitmap() -> i
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    int removeTrack(long) -> removeTrack
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getTrackName() -> getTrackName
    boolean isPodcast() -> j
    long getBookmark() -> k
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    void toggleFavorite() -> toggleFavorite
    boolean isFavorite() -> isFavorite
    boolean isFavorite(long) -> isFavorite
    void removeFromFavorites() -> removeFromFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    void addToFavorites() -> addToFavorites
    void addToFavorites(long) -> addToFavorites
    android.os.Handler access$100(com.energy.energyMusic.service.ApolloService) -> a
    com.energy.energyMusic.service.ApolloService$MultiPlayer access$200(com.energy.energyMusic.service.ApolloService) -> b
    boolean access$300(com.energy.energyMusic.service.ApolloService) -> c
    void access$400(com.energy.energyMusic.service.ApolloService) -> d
    int access$500(com.energy.energyMusic.service.ApolloService) -> e
    long[] access$600(com.energy.energyMusic.service.ApolloService) -> f
    int access$702(com.energy.energyMusic.service.ApolloService,int) -> a
    android.database.Cursor access$800(com.energy.energyMusic.service.ApolloService) -> g
    android.database.Cursor access$802(com.energy.energyMusic.service.ApolloService,android.database.Cursor) -> a
    int access$700(com.energy.energyMusic.service.ApolloService) -> h
    android.database.Cursor access$900(com.energy.energyMusic.service.ApolloService,long) -> a
    void access$1000(com.energy.energyMusic.service.ApolloService) -> i
    void access$1100(com.energy.energyMusic.service.ApolloService) -> j
    void access$1200(com.energy.energyMusic.service.ApolloService) -> k
    int access$1300(com.energy.energyMusic.service.ApolloService) -> l
    android.os.PowerManager$WakeLock access$1400(com.energy.energyMusic.service.ApolloService) -> m
    boolean access$1502(com.energy.energyMusic.service.ApolloService,boolean) -> a
    boolean access$1500(com.energy.energyMusic.service.ApolloService) -> n
    com.energy.energyMusic.app.widgets.AppWidget42 access$1600(com.energy.energyMusic.service.ApolloService) -> o
    com.energy.energyMusic.app.widgets.AppWidget41 access$1700(com.energy.energyMusic.service.ApolloService) -> p
    com.energy.energyMusic.app.widgets.AppWidget11 access$1800(com.energy.energyMusic.service.ApolloService) -> q
    boolean access$1900(com.energy.energyMusic.service.ApolloService) -> r
    void access$2000(com.energy.energyMusic.service.ApolloService,boolean) -> b
    int access$2100(com.energy.energyMusic.service.ApolloService) -> s
    boolean access$2202(com.energy.energyMusic.service.ApolloService,boolean) -> c
    int access$2308(com.energy.energyMusic.service.ApolloService) -> t
    int access$2402(com.energy.energyMusic.service.ApolloService,int) -> b
    void access$2500(com.energy.energyMusic.service.ApolloService) -> u
com.energy.energyMusic.service.ApolloService$1 -> com.energy.energyMusic.service.a:
    float mCurrentVolume -> a
    com.energy.energyMusic.service.ApolloService this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.energy.energyMusic.service.ApolloService$2 -> com.energy.energyMusic.service.b:
    com.energy.energyMusic.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.service.ApolloService$3 -> com.energy.energyMusic.service.c:
    com.energy.energyMusic.service.ApolloService this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.energy.energyMusic.service.ApolloService$4 -> com.energy.energyMusic.service.d:
    com.energy.energyMusic.service.ApolloService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.energy.energyMusic.service.ApolloService$5 -> com.energy.energyMusic.service.e:
    com.energy.energyMusic.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.service.ApolloService$MultiPlayer -> com.energy.energyMusic.service.f:
    android.media.MediaPlayer mCurrentMediaPlayer -> d
    android.media.MediaPlayer mNextMediaPlayer -> e
    android.os.Handler mHandler -> f
    boolean mIsInitialized -> g
    android.media.MediaPlayer$OnCompletionListener listener -> a
    android.media.MediaPlayer$OnErrorListener errorListener -> b
    com.energy.energyMusic.service.ApolloService this$0 -> c
    void setDataSource(java.lang.String) -> setDataSource
    boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String) -> a
    void setNextDataSource(java.lang.String) -> setNextDataSource
    boolean isInitialized() -> isInitialized
    void start() -> start
    void stop() -> stop
    void release() -> release
    void pause() -> pause
    void setHandler(android.os.Handler) -> setHandler
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setVolume(float) -> setVolume
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    android.media.MediaPlayer access$2600(com.energy.energyMusic.service.ApolloService$MultiPlayer) -> a
    android.media.MediaPlayer access$2700(com.energy.energyMusic.service.ApolloService$MultiPlayer) -> b
    android.media.MediaPlayer access$2602(com.energy.energyMusic.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> a
    android.media.MediaPlayer access$2702(com.energy.energyMusic.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> b
    android.os.Handler access$2800(com.energy.energyMusic.service.ApolloService$MultiPlayer) -> c
    boolean access$2902(com.energy.energyMusic.service.ApolloService$MultiPlayer,boolean) -> a
com.energy.energyMusic.service.ApolloService$MultiPlayer$1 -> com.energy.energyMusic.service.g:
    com.energy.energyMusic.service.ApolloService$MultiPlayer this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.energy.energyMusic.service.ApolloService$MultiPlayer$2 -> com.energy.energyMusic.service.h:
    com.energy.energyMusic.service.ApolloService$MultiPlayer this$1 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.energy.energyMusic.service.ApolloService$ServiceStub -> com.energy.energyMusic.service.i:
    java.lang.ref.WeakReference mService -> a
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    long getAlbumId() -> getAlbumId
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    long position() -> position
    long duration() -> duration
    long seek(long) -> seek
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    void moveQueueItem(int,int) -> moveQueueItem
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
    void notifyChange(java.lang.String) -> notifyChange
com.energy.energyMusic.service.ApolloService$Shuffler -> com.energy.energyMusic.service.j:
    int mPrevious -> a
    java.util.Random mRandom -> b
    int nextInt(int) -> nextInt
com.energy.energyMusic.service.MediaButtonIntentReceiver -> com.energy.energyMusic.service.MediaButtonIntentReceiver:
    long mLastClickTime -> a
    boolean mDown -> b
    boolean mLaunched -> c
    android.os.Handler mHandler -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean access$000() -> a
    boolean access$002(boolean) -> a
com.energy.energyMusic.service.MediaButtonIntentReceiver$1 -> com.energy.energyMusic.service.k:
    void handleMessage(android.os.Message) -> handleMessage
com.energy.energyMusic.service.ServiceBinder -> com.energy.energyMusic.service.ServiceBinder:
    android.content.ServiceConnection mCallback -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.energy.energyMusic.service.ServiceToken -> com.energy.energyMusic.service.ServiceToken:
    android.content.ContextWrapper mWrappedContext -> mWrappedContext
com.energy.energyMusic.ui.adapters.AlbumArtPagerAdapter -> com.energy.energyMusic.ui.adapters.AlbumArtPagerAdapter:
    java.util.ArrayList mFragments -> a
    void addFragment(android.support.v4.app.Fragment) -> addFragment
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    void removeItem(int) -> removeItem
    void addFragmentTo(android.support.v4.app.Fragment,int) -> addFragmentTo
    int getItemPosition(java.lang.Object) -> getItemPosition
    void refresh() -> refresh
com.energy.energyMusic.ui.adapters.PagerAdapter -> com.energy.energyMusic.ui.adapters.PagerAdapter:
    java.util.ArrayList mFragments -> a
    void addFragment(android.support.v4.app.Fragment) -> addFragment
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    void refresh() -> refresh
com.energy.energyMusic.ui.adapters.QuickQueueAdapter -> com.energy.energyMusic.ui.adapters.QuickQueueAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    com.energy.energyMusic.cache.ImageProvider mImageProvider -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.energy.energyMusic.ui.adapters.ScrollingTabsAdapter -> com.energy.energyMusic.ui.adapters.ScrollingTabsAdapter:
    android.app.Activity activity -> a
    android.view.View getView(int) -> getView
com.energy.energyMusic.ui.adapters.TabAdapter -> com.energy.energyMusic.ui.adapters.TabAdapter:
    android.view.View getView(int) -> getView
com.energy.energyMusic.ui.adapters.base.DragSortListViewAdapter -> com.energy.energyMusic.ui.adapters.base.DragSortListViewAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> b
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> c
    java.lang.ref.WeakReference holderReference -> d
    android.content.Context mContext -> mContext
    com.energy.energyMusic.cache.ImageProvider mImageProvider -> e
    java.lang.String mLineOneText -> mLineOneText
    java.lang.String mLineTwoText -> mLineTwoText
    java.lang.String[] mImageData -> mImageData
    long mPlayingId -> mPlayingId
    long mCurrentId -> mCurrentId
    android.view.View$OnClickListener showContextMenu -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.base.DragSortListViewAdapter$1 -> com.energy.energyMusic.ui.adapters.base.a:
    com.energy.energyMusic.ui.adapters.base.DragSortListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.adapters.base.GridViewAdapter -> com.energy.energyMusic.ui.adapters.base.GridViewAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> b
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> c
    java.lang.ref.WeakReference holderReference -> d
    android.content.Context mContext -> mContext
    com.energy.energyMusic.cache.ImageProvider mImageProvider -> e
    java.lang.String mGridType -> mGridType
    java.lang.String mLineOneText -> mLineOneText
    java.lang.String mLineTwoText -> mLineTwoText
    java.lang.String[] mImageData -> mImageData
    long mPlayingId -> mPlayingId
    long mCurrentId -> mCurrentId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.base.ListViewAdapter -> com.energy.energyMusic.ui.adapters.base.ListViewAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> b
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> c
    android.content.Context mContext -> mContext
    int left -> d
    int top -> e
    java.lang.String mListType -> mListType
    java.lang.String mLineOneText -> mLineOneText
    java.lang.String mLineTwoText -> mLineTwoText
    java.lang.String[] mImageData -> mImageData
    long mPlayingId -> mPlayingId
    long mCurrentId -> mCurrentId
    boolean showContextEnabled -> showContextEnabled
    com.energy.energyMusic.cache.ImageProvider mImageProvider -> f
    android.view.View$OnClickListener showContextMenu -> g
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.base.ListViewAdapter$1 -> com.energy.energyMusic.ui.adapters.base.b:
    com.energy.energyMusic.ui.adapters.base.ListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.adapters.grid.AlbumAdapter -> com.energy.energyMusic.ui.adapters.grid.AlbumAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.grid.ArtistAdapter -> com.energy.energyMusic.ui.adapters.grid.ArtistAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.AlbumListAdapter -> com.energy.energyMusic.ui.adapters.list.AlbumListAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.ArtistAlbumAdapter -> com.energy.energyMusic.ui.adapters.list.ArtistAlbumAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.ArtistListAdapter -> com.energy.energyMusic.ui.adapters.list.ArtistListAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.GenreAdapter -> com.energy.energyMusic.ui.adapters.list.GenreAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.GenreListAdapter -> com.energy.energyMusic.ui.adapters.list.GenreListAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.NowPlayingAdapter -> com.energy.energyMusic.ui.adapters.list.NowPlayingAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
    void drop(int,int) -> drop
    void remove(int) -> remove
com.energy.energyMusic.ui.adapters.list.PlaylistAdapter -> com.energy.energyMusic.ui.adapters.list.PlaylistAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.PlaylistListAdapter -> com.energy.energyMusic.ui.adapters.list.PlaylistListAdapter:
    long mPlaylistId -> b
    void setupViewData(android.database.Cursor) -> setupViewData
    void drop(int,int) -> drop
    void remove(int) -> remove
com.energy.energyMusic.ui.adapters.list.RecentlyAddedAdapter -> com.energy.energyMusic.ui.adapters.list.RecentlyAddedAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.adapters.list.SonglistAdapter -> com.energy.energyMusic.ui.adapters.list.SonglistAdapter:
    void setupViewData(android.database.Cursor) -> setupViewData
com.energy.energyMusic.ui.fragments.AlbumArtFragment -> com.energy.energyMusic.ui.fragments.AlbumArtFragment:
    android.widget.ImageView albumArt -> albumArt
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.energy.energyMusic.ui.fragments.AudioPlayerFragment -> com.energy.energyMusic.ui.fragments.AudioPlayerFragment:
    android.widget.TextView mTotalTime -> b
    android.widget.TextView mCurrentTime -> c
    android.support.v4.view.ViewPager mAlbumArtPager -> d
    com.energy.energyMusic.ui.adapters.AlbumArtPagerAdapter mPagerAdapter -> e
    android.widget.ImageButton mRepeat -> f
    android.widget.ImageButton mPlay -> g
    android.widget.ImageButton mShuffle -> h
    com.energy.energyMusic.ui.widgets.RepeatingImageButton mPrev -> i
    com.energy.energyMusic.ui.widgets.RepeatingImageButton mNext -> Y
    android.widget.SeekBar mProgress -> Z
    long mDuration -> aa
    long mLastSeekEventTime -> ab
    long mPosOverride -> ac
    long mStartSeekPos -> ad
    boolean mFromTouch -> ae
    boolean paused -> af
    boolean paso -> ag
    boolean primera -> ah
    android.view.View root -> a
    android.widget.Toast mToast -> ai
    android.content.BroadcastReceiver mStatusListener -> aj
    com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> ak
    com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> al
    android.os.Handler mHandler -> am
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> an
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void cycleRepeat() -> l
    void doPauseResume() -> m
    void toggleShuffle() -> n
    void scanBackward(int,long) -> a
    void scanForward(int,long) -> b
    void setRepeatButtonImage() -> o
    void setShuffleButtonImage() -> p
    void setPauseButtonImage() -> q
    void queueNextRefresh(long) -> a
    long refreshNow() -> r
    void updateMusicInfo() -> s
    void access$000(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> a
    void access$100(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> b
    void access$200(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> c
    android.support.v4.view.ViewPager access$400(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> d
    com.energy.energyMusic.ui.adapters.AlbumArtPagerAdapter access$500(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> e
    android.os.Handler access$600(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> f
    void access$700(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> g
    void access$800(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> h
    void access$900(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> i
    void access$1000(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,int,long) -> a
    void access$1100(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,int,long) -> b
    long access$1200(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> j
    void access$1300(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,long) -> a
    void access$1400(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> k
    long access$1502(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,long) -> b
    boolean access$1602(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,boolean) -> a
    long access$1500(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> l
    long access$1702(com.energy.energyMusic.ui.fragments.AudioPlayerFragment,long) -> c
    long access$1800(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> m
    long access$1700(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> n
    boolean access$1600(com.energy.energyMusic.ui.fragments.AudioPlayerFragment) -> o
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$1 -> com.energy.energyMusic.ui.fragments.a:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$10 -> com.energy.energyMusic.ui.fragments.b:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$2 -> com.energy.energyMusic.ui.fragments.c:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$3 -> com.energy.energyMusic.ui.fragments.d:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$4 -> com.energy.energyMusic.ui.fragments.e:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$5 -> com.energy.energyMusic.ui.fragments.f:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$6 -> com.energy.energyMusic.ui.fragments.g:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$7 -> com.energy.energyMusic.ui.fragments.h:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$8 -> com.energy.energyMusic.ui.fragments.i:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$9 -> com.energy.energyMusic.ui.fragments.j:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.energy.energyMusic.ui.fragments.AudioPlayerFragment$AlbumArtPageListener -> com.energy.energyMusic.ui.fragments.k:
    com.energy.energyMusic.ui.fragments.AudioPlayerFragment this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.energy.energyMusic.ui.fragments.BottomActionBarFragment -> com.energy.energyMusic.ui.fragments.BottomActionBarFragment:
    android.widget.ImageButton mPrev -> a
    android.widget.ImageButton mPlay -> b
    android.widget.ImageButton mNext -> c
    android.widget.ImageButton mQueue -> d
    com.energy.energyMusic.ui.widgets.BottomActionBar mBottomActionBar -> e
    android.widget.RelativeLayout albumArt -> f
    android.widget.RelativeLayout listQueue -> g
    android.content.BroadcastReceiver mMediaStatusReceiver -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onStop() -> onStop
    void doPauseResume() -> l
    void onCollapsed() -> onCollapsed
    void onExpanded() -> onExpanded
    void fade(android.view.View,float) -> a
    void setPauseButtonImage() -> m
    void setUpQueueSwitch(android.app.Activity) -> setUpQueueSwitch
    void access$000(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> a
    com.energy.energyMusic.ui.widgets.BottomActionBar access$100(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> b
    void access$200(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> c
    android.widget.RelativeLayout access$300(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> d
    android.widget.RelativeLayout access$400(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> e
    android.widget.ImageButton access$500(com.energy.energyMusic.ui.fragments.BottomActionBarFragment) -> f
    void access$600(com.energy.energyMusic.ui.fragments.BottomActionBarFragment,android.view.View,float) -> a
com.energy.energyMusic.ui.fragments.BottomActionBarFragment$1 -> com.energy.energyMusic.ui.fragments.l:
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.BottomActionBarFragment$2 -> com.energy.energyMusic.ui.fragments.m:
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.BottomActionBarFragment$3 -> com.energy.energyMusic.ui.fragments.n:
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.BottomActionBarFragment$4 -> com.energy.energyMusic.ui.fragments.o:
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.BottomActionBarFragment$5 -> com.energy.energyMusic.ui.fragments.p:
    com.energy.energyMusic.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.fragments.base.DragSortListViewFragment -> com.energy.energyMusic.ui.fragments.base.DragSortListViewFragment:
    com.energy.energyMusic.ui.adapters.base.DragSortListViewAdapter mAdapter -> mAdapter
    com.mobeta.android.dslv.DragSortListView mListView -> mListView
    android.database.Cursor mCursor -> mCursor
    int mSelectedPosition -> mSelectedPosition
    long mSelectedId -> mSelectedId
    int PLAY_SELECTION -> PLAY_SELECTION
    int USE_AS_RINGTONE -> USE_AS_RINGTONE
    int ADD_TO_PLAYLIST -> ADD_TO_PLAYLIST
    int SEARCH -> SEARCH
    int REMOVE -> REMOVE
    int mFragmentGroupId -> mFragmentGroupId
    java.lang.String mSortOrder -> mSortOrder
    java.lang.String mWhere -> mWhere
    java.lang.String mType -> mType
    java.lang.String mMediaIdColumn -> mMediaIdColumn
    java.lang.String[] mProjection -> mProjection
    android.net.Uri mUri -> mUri
    android.content.BroadcastReceiver mMediaStatusReceiver -> a
    void setupFragmentData() -> setupFragmentData
    void removePlaylistItem(int) -> removePlaylistItem
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> refresh
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.energy.energyMusic.ui.fragments.base.DragSortListViewFragment$1 -> com.energy.energyMusic.ui.fragments.base.a:
    com.energy.energyMusic.ui.fragments.base.DragSortListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.base.GridViewFragment -> com.energy.energyMusic.ui.fragments.base.GridViewFragment:
    android.widget.GridView mGridView -> a
    com.energy.energyMusic.ui.adapters.base.GridViewAdapter mAdapter -> mAdapter
    android.database.Cursor mCursor -> mCursor
    int PLAY_SELECTION -> b
    int ADD_TO_PLAYLIST -> c
    int SEARCH -> d
    int mFragmentGroupId -> mFragmentGroupId
    java.lang.String mCurrentId -> mCurrentId
    java.lang.String mSortOrder -> mSortOrder
    java.lang.String mType -> mType
    java.lang.String[] mProjection -> mProjection
    android.net.Uri mUri -> mUri
    android.content.BroadcastReceiver mMediaStatusReceiver -> e
    void setupFragmentData() -> setupFragmentData
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$000(com.energy.energyMusic.ui.fragments.base.GridViewFragment) -> a
com.energy.energyMusic.ui.fragments.base.GridViewFragment$1 -> com.energy.energyMusic.ui.fragments.base.b:
    com.energy.energyMusic.ui.fragments.base.GridViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.base.ListViewFragment -> com.energy.energyMusic.ui.fragments.base.ListViewFragment:
    com.energy.energyMusic.ui.adapters.base.ListViewAdapter mAdapter -> mAdapter
    android.widget.ListView mListView -> mListView
    android.database.Cursor mCursor -> mCursor
    int mSelectedPosition -> mSelectedPosition
    long mSelectedId -> mSelectedId
    int PLAY_SELECTION -> PLAY_SELECTION
    int USE_AS_RINGTONE -> USE_AS_RINGTONE
    int ADD_TO_PLAYLIST -> ADD_TO_PLAYLIST
    int SEARCH -> SEARCH
    int mFragmentGroupId -> mFragmentGroupId
    java.lang.String mCurrentId -> mCurrentId
    java.lang.String mSortOrder -> mSortOrder
    java.lang.String mWhere -> mWhere
    java.lang.String mType -> mType
    java.lang.String mTitleColumn -> mTitleColumn
    java.lang.String[] mProjection -> mProjection
    android.net.Uri mUri -> mUri
    android.content.BroadcastReceiver mMediaStatusReceiver -> a
    void setupFragmentData() -> setupFragmentData
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> refresh
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.energy.energyMusic.ui.fragments.base.ListViewFragment$1 -> com.energy.energyMusic.ui.fragments.base.c:
    com.energy.energyMusic.ui.fragments.base.ListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.grid.AlbumsFragment -> com.energy.energyMusic.ui.fragments.grid.AlbumsFragment:
    void setupFragmentData() -> setupFragmentData
com.energy.energyMusic.ui.fragments.grid.ArtistsFragment -> com.energy.energyMusic.ui.fragments.grid.ArtistsFragment:
    void setupFragmentData() -> setupFragmentData
com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment -> com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment:
    com.energy.energyMusic.ui.adapters.QuickQueueAdapter mQuickQueueAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int mSelectedPosition -> d
    int PLAY_SELECTION -> e
    int REMOVE -> f
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    int mAlbumIdIndex -> mAlbumIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> g
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void removePlaylistItem(int) -> a
    void reloadQueueCursor() -> l
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$000(com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment) -> a
    com.energy.energyMusic.ui.adapters.QuickQueueAdapter access$100(com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment) -> b
com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment$1 -> com.energy.energyMusic.ui.fragments.grid.a:
    com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment$1$1 -> com.energy.energyMusic.ui.fragments.grid.b:
    com.energy.energyMusic.ui.fragments.grid.QuickQueueFragment$1 this$1 -> a
    void run() -> run
com.energy.energyMusic.ui.fragments.list.AlbumListFragment -> com.energy.energyMusic.ui.fragments.list.AlbumListFragment:
    void setupFragmentData() -> setupFragmentData
com.energy.energyMusic.ui.fragments.list.ArtistAlbumsFragment -> com.energy.energyMusic.ui.fragments.list.ArtistAlbumsFragment:
    void setupFragmentData() -> setupFragmentData
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
com.energy.energyMusic.ui.fragments.list.ArtistListFragment -> com.energy.energyMusic.ui.fragments.list.ArtistListFragment:
    void setupFragmentData() -> setupFragmentData
com.energy.energyMusic.ui.fragments.list.GenreListFragment -> com.energy.energyMusic.ui.fragments.list.GenreListFragment:
    void setupFragmentData() -> setupFragmentData
com.energy.energyMusic.ui.fragments.list.GenresFragment -> com.energy.energyMusic.ui.fragments.list.GenresFragment:
    void setupFragmentData() -> setupFragmentData
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
com.energy.energyMusic.ui.fragments.list.NowPlayingFragment -> com.energy.energyMusic.ui.fragments.list.NowPlayingFragment:
    void setupFragmentData() -> setupFragmentData
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void removePlaylistItem(int) -> removePlaylistItem
    void reloadQueueCursor() -> l
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.energy.energyMusic.ui.fragments.list.PlaylistListFragment -> com.energy.energyMusic.ui.fragments.list.PlaylistListFragment:
    long mPlaylistId -> a
    void setupFragmentData() -> setupFragmentData
    void removePlaylistItem(int) -> removePlaylistItem
com.energy.energyMusic.ui.fragments.list.PlaylistsFragment -> com.energy.energyMusic.ui.fragments.list.PlaylistsFragment:
    void setupFragmentData() -> setupFragmentData
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.energy.energyMusic.ui.fragments.list.RecentlyAddedFragment -> com.energy.energyMusic.ui.fragments.list.RecentlyAddedFragment:
    void setupFragmentData() -> setupFragmentData
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
com.energy.energyMusic.ui.fragments.list.SongsFragment -> com.energy.energyMusic.ui.fragments.list.SongsFragment:
    void setupFragmentData() -> setupFragmentData
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.energy.energyMusic.ui.fragments.list.SongsFragment$1 -> com.energy.energyMusic.ui.fragments.list.a:
    com.energy.energyMusic.ui.fragments.list.SongsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.widgets.BottomActionBar -> com.energy.energyMusic.ui.widgets.BottomActionBar:
    void updateBottomActionBar(android.app.Activity) -> updateBottomActionBar
    boolean onLongClick(android.view.View) -> onLongClick
com.energy.energyMusic.ui.widgets.RepeatingImageButton -> com.energy.energyMusic.ui.widgets.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    void setRepeatListener(com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener,long) -> setRepeatListener
    boolean performLongClick() -> performLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void doRepeat(boolean) -> a
    void access$000(com.energy.energyMusic.ui.widgets.RepeatingImageButton,boolean) -> a
    long access$100(com.energy.energyMusic.ui.widgets.RepeatingImageButton) -> a
com.energy.energyMusic.ui.widgets.RepeatingImageButton$1 -> com.energy.energyMusic.ui.widgets.a:
    com.energy.energyMusic.ui.widgets.RepeatingImageButton this$0 -> a
    void run() -> run
com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener -> com.energy.energyMusic.ui.widgets.RepeatingImageButton$RepeatListener:
    void onRepeat(android.view.View,long,int) -> onRepeat
com.energy.energyMusic.ui.widgets.ScrollableTabView -> com.energy.energyMusic.ui.widgets.ScrollableTabView:
    android.support.v4.view.ViewPager mPager -> a
    com.energy.energyMusic.ui.adapters.TabAdapter mAdapter -> b
    android.widget.LinearLayout mContainer -> c
    java.util.ArrayList mTabs -> d
    void setAdapter(com.energy.energyMusic.ui.adapters.TabAdapter) -> setAdapter
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void initTabs() -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectTab(int) -> a
    android.support.v4.view.ViewPager access$000(com.energy.energyMusic.ui.widgets.ScrollableTabView) -> a
    void access$100(com.energy.energyMusic.ui.widgets.ScrollableTabView,int) -> a
com.energy.energyMusic.ui.widgets.ScrollableTabView$1 -> com.energy.energyMusic.ui.widgets.b:
    int val$index -> a
    com.energy.energyMusic.ui.widgets.ScrollableTabView this$0 -> b
    void onClick(android.view.View) -> onClick
com.energy.energyMusic.ui.widgets.VisualizerView -> com.energy.energyMusic.ui.widgets.VisualizerView:
    byte[] mBytes -> d
    byte[] mFFTBytes -> e
    android.graphics.Rect mRect -> f
    com.energy.energyMusic.helpers.visualizer.Renderer mRenderer -> g
    java.lang.String type -> a
    android.graphics.Bitmap mCanvasBitmap -> b
    android.graphics.Canvas mCanvas -> c
    void updateVisualizer(byte[]) -> updateVisualizer
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void onDraw(android.graphics.Canvas) -> onDraw
com.energy.energyMusic.views.TrackBrowserImageView -> com.energy.energyMusic.views.TrackBrowserImageView:
    void setup() -> a
    boolean setFrame(int,int,int,int) -> setFrame
com.energy.energyMusic.views.VerticalSeekBar -> com.energy.energyMusic.views.VerticalSeekBar:
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.energy.energyMusic.views.ViewHolderGrid -> com.energy.energyMusic.views.ViewHolderGrid:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.LinearLayout mInfoHolder -> mInfoHolder
com.energy.energyMusic.views.ViewHolderList -> com.energy.energyMusic.views.ViewHolderList:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mQuickContextDivider -> mQuickContextDivider
    android.widget.ImageView mQuickContextTip -> mQuickContextTip
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.FrameLayout mQuickContext -> mQuickContext
com.energy.energyMusic.views.ViewHolderQueue -> com.energy.energyMusic.views.ViewHolderQueue:
    android.widget.ImageView mArtistImage -> mArtistImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mAlbumArt -> mAlbumArt
    android.widget.TextView mTrackName -> mTrackName
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.DragSortController:
    int ON_DOWN -> ON_DOWN
    int ON_DRAG -> ON_DRAG
    int ON_LONG_PRESS -> ON_LONG_PRESS
    int mDragInitMode -> a
    boolean mSortEnabled -> b
    int CLICK_REMOVE -> CLICK_REMOVE
    int FLING_REMOVE -> FLING_REMOVE
    int mRemoveMode -> c
    boolean mRemoveEnabled -> d
    boolean mIsRemoving -> e
    android.view.GestureDetector mDetector -> f
    android.view.GestureDetector mFlingRemoveDetector -> g
    int mTouchSlop -> h
    int MISS -> MISS
    int mHitPos -> i
    int mFlingHitPos -> j
    int mClickRemoveHitPos -> k
    int[] mTempLoc -> l
    int mItemX -> m
    int mItemY -> n
    int mCurrX -> o
    int mCurrY -> p
    boolean mDragging -> q
    float mFlingSpeed -> r
    int mDragHandleId -> s
    int mClickRemoveId -> t
    int mFlingHandleId -> u
    boolean mCanDrag -> v
    com.mobeta.android.dslv.DragSortListView mDslv -> w
    int mPositionX -> x
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> y
    int getDragInitMode() -> getDragInitMode
    void setDragInitMode(int) -> setDragInitMode
    void setSortEnabled(boolean) -> setSortEnabled
    boolean isSortEnabled() -> isSortEnabled
    void setRemoveMode(int) -> setRemoveMode
    int getRemoveMode() -> getRemoveMode
    void setRemoveEnabled(boolean) -> setRemoveEnabled
    boolean isRemoveEnabled() -> isRemoveEnabled
    void setDragHandleId(int) -> setDragHandleId
    void setFlingHandleId(int) -> setFlingHandleId
    void setClickRemoveId(int) -> setClickRemoveId
    boolean startDrag(int,int,int) -> startDrag
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    int startDragPosition(android.view.MotionEvent) -> startDragPosition
    int startFlingPosition(android.view.MotionEvent) -> startFlingPosition
    int dragHandleHitPosition(android.view.MotionEvent) -> dragHandleHitPosition
    int flingHandleHitPosition(android.view.MotionEvent) -> flingHandleHitPosition
    int viewIdHitPosition(android.view.MotionEvent,int) -> viewIdHitPosition
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean access$000(com.mobeta.android.dslv.DragSortController) -> a
    boolean access$100(com.mobeta.android.dslv.DragSortController) -> b
    com.mobeta.android.dslv.DragSortListView access$200(com.mobeta.android.dslv.DragSortController) -> c
    float access$300(com.mobeta.android.dslv.DragSortController) -> d
    int access$400(com.mobeta.android.dslv.DragSortController) -> e
    boolean access$102(com.mobeta.android.dslv.DragSortController,boolean) -> a
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.a:
    com.mobeta.android.dslv.DragSortController this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mobeta.android.dslv.DragSortCursorAdapter -> com.mobeta.android.dslv.DragSortCursorAdapter:
    int REMOVED -> REMOVED
    android.util.SparseIntArray mListMapping -> a
    java.util.ArrayList mRemovedCursorPositions -> b
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursor(android.database.Cursor) -> changeCursor
    void reset() -> reset
    void resetMappings() -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void drop(int,int) -> drop
    void remove(int) -> remove
    void drag(int,int) -> drag
    void cleanMapping() -> b
    int getCount() -> getCount
    int getCursorPosition(int) -> getCursorPosition
    java.util.ArrayList getCursorPositions() -> getCursorPositions
    int getListPosition(int) -> getListPosition
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.DragSortItemView:
    int mGravity -> a
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.mobeta.android.dslv.DragSortItemViewCheckable -> com.mobeta.android.dslv.DragSortItemViewCheckable:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    android.view.View mFloatView -> a
    android.graphics.Point mFloatLoc -> b
    android.graphics.Point mTouchLoc -> c
    int mFloatViewMid -> d
    boolean mFloatViewOnMeasured -> e
    android.database.DataSetObserver mObserver -> f
    float mFloatAlpha -> g
    float mCurrFloatAlpha -> h
    int mFloatPos -> i
    int mFirstExpPos -> j
    int mSecondExpPos -> k
    boolean mAnimate -> l
    int mSrcPos -> m
    int mDragDeltaX -> n
    int mDragDeltaY -> o
    int mOffsetX -> p
    int mOffsetY -> q
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> r
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> s
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> t
    boolean mDragEnabled -> u
    int mDragState -> v
    int mItemHeightCollapsed -> w
    int mFloatViewHeight -> x
    int mFloatViewHeightHalf -> y
    int mWidthMeasureSpec -> z
    android.view.View[] mSampleViewTypes -> A
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> B
    float mDragUpScrollStartFrac -> C
    float mDragDownScrollStartFrac -> D
    int mUpScrollStartY -> E
    int mDownScrollStartY -> F
    float mDownScrollStartYF -> G
    float mUpScrollStartYF -> H
    float mDragUpScrollHeight -> I
    float mDragDownScrollHeight -> J
    float mMaxScrollSpeed -> K
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> L
    int mX -> M
    int mY -> N
    int mLastX -> O
    int mLastY -> P
    int mDragStartY -> Q
    int DRAG_POS_X -> DRAG_POS_X
    int DRAG_NEG_X -> DRAG_NEG_X
    int DRAG_POS_Y -> DRAG_POS_Y
    int DRAG_NEG_Y -> DRAG_NEG_Y
    int mDragFlags -> R
    boolean mLastCallWasIntercept -> S
    boolean mInTouchEvent -> T
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> U
    android.view.MotionEvent mCancelEvent -> V
    int mCancelMethod -> W
    float mSlideRegionFrac -> Z
    float mSlideFrac -> aa
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> ab
    boolean mTrackDragSort -> ac
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> ad
    boolean mBlockLayoutRequests -> ae
    boolean mIgnoreTouchEvent -> af
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> ag
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> ah
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> ai
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> aj
    boolean mUseRemoveVelocity -> ak
    float mRemoveVelocityX -> al
    boolean mListViewIntercepted -> am
    boolean mFloatViewInvalidated -> an
    void setFloatAlpha(float) -> setFloatAlpha
    float getFloatAlpha() -> getFloatAlpha
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    void drawDivider(int,android.graphics.Canvas) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getItemHeight(int) -> a
    int getShuffleEdge(int,int) -> a
    boolean updatePositions() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void removeItem(int) -> removeItem
    void removeItem(int,float) -> removeItem
    void moveItem(int,int) -> moveItem
    void cancelDrag() -> cancelDrag
    void clearPositions() -> b
    void dropFloatView() -> c
    void doRemoveItem() -> d
    void doRemoveItem(int) -> b
    void adjustOnReorder() -> e
    boolean stopDrag(boolean) -> stopDrag
    boolean stopDragWithVelocity(boolean,float) -> stopDragWithVelocity
    boolean stopDrag(boolean,float) -> stopDrag
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doActionUpOrCancel() -> f
    void saveTouchCoords(android.view.MotionEvent) -> a
    boolean listViewIntercepted() -> listViewIntercepted
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> setDragScrollStarts
    void continueDrag(int,int) -> b
    void updateScrollStarts() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void adjustAllItems() -> h
    void adjustItem(int,android.view.View,boolean) -> a
    int getChildHeight(int) -> c
    int getChildHeight(int,android.view.View,boolean) -> b
    int calcItemHeight(int,android.view.View,boolean) -> c
    int calcItemHeight(int,int) -> c
    void requestLayout() -> requestLayout
    int adjustScroll(int,android.view.View,int,int) -> a
    void measureItem(android.view.View) -> a
    void measureFloatView() -> i
    void onMeasure(int,int) -> onMeasure
    void layoutChildren() -> layoutChildren
    boolean onDragTouchEvent(android.view.MotionEvent) -> onDragTouchEvent
    boolean startDrag(int,int,int,int) -> startDrag
    boolean startDrag(int,android.view.View,int,int,int) -> startDrag
    void doDragFloatView(boolean) -> a
    void doDragFloatView(int,android.view.View,boolean) -> d
    void updateFloatView() -> j
    void destroyFloatView() -> k
    void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> isDragEnabled
    void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    void moveCheckState(int,int) -> moveCheckState
    void removeCheckState(int) -> removeCheckState
    int buildRunList(android.util.SparseBooleanArray,int,int,int[],int[]) -> a
    int rotate(int,int,int,int) -> a
    int findFirstSetIndex(android.util.SparseBooleanArray,int,int) -> a
    int insertionIndexForKey(android.util.SparseBooleanArray,int) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    float access$000(com.mobeta.android.dslv.DragSortListView) -> a
    int access$100(com.mobeta.android.dslv.DragSortListView) -> b
    void access$200(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> a
    int access$300(com.mobeta.android.dslv.DragSortListView) -> c
    int access$400(com.mobeta.android.dslv.DragSortListView) -> d
    int access$302(com.mobeta.android.dslv.DragSortListView,int) -> a
    android.graphics.Point access$500(com.mobeta.android.dslv.DragSortListView) -> e
    int access$600(com.mobeta.android.dslv.DragSortListView) -> f
    void access$700(com.mobeta.android.dslv.DragSortListView,boolean) -> a
    int access$800(com.mobeta.android.dslv.DragSortListView) -> g
    int access$900(com.mobeta.android.dslv.DragSortListView) -> h
    int access$102(com.mobeta.android.dslv.DragSortListView,int) -> b
    int access$1000(com.mobeta.android.dslv.DragSortListView) -> i
    int access$1100(com.mobeta.android.dslv.DragSortListView) -> j
    void access$1200(com.mobeta.android.dslv.DragSortListView) -> k
    int access$1300(com.mobeta.android.dslv.DragSortListView) -> l
    int access$1400(com.mobeta.android.dslv.DragSortListView) -> m
    boolean access$1500(com.mobeta.android.dslv.DragSortListView) -> n
    float access$1600(com.mobeta.android.dslv.DragSortListView) -> o
    float access$1602(com.mobeta.android.dslv.DragSortListView,float) -> a
    void access$1700(com.mobeta.android.dslv.DragSortListView) -> p
    float access$1616(com.mobeta.android.dslv.DragSortListView,float) -> b
    int access$1800(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> b
    void access$1900(com.mobeta.android.dslv.DragSortListView) -> q
    int access$2000(com.mobeta.android.dslv.DragSortListView) -> r
    float access$2100(com.mobeta.android.dslv.DragSortListView) -> s
    float access$2200(com.mobeta.android.dslv.DragSortListView) -> t
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile access$2300(com.mobeta.android.dslv.DragSortListView) -> u
    float access$2400(com.mobeta.android.dslv.DragSortListView) -> v
    float access$2500(com.mobeta.android.dslv.DragSortListView) -> w
    boolean access$2602(com.mobeta.android.dslv.DragSortListView,boolean) -> b
    void access$2700(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> c
    int access$2800(com.mobeta.android.dslv.DragSortListView,int) -> c
    int access$2900(com.mobeta.android.dslv.DragSortListView,int) -> d
    int access$3000(com.mobeta.android.dslv.DragSortListView) -> x
    int access$3100(com.mobeta.android.dslv.DragSortListView,int,int) -> a
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.b:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    float getSpeed(float,long) -> getSpeed
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.c:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void cancel() -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.d:
    android.widget.ListAdapter mAdapter -> b
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    android.widget.ListAdapter getAdapter() -> getAdapter
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1 -> com.mobeta.android.dslv.e:
    com.mobeta.android.dslv.DragSortListView val$this$0 -> a
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper this$1 -> b
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.DragSortListView$DragListener:
    void drag(int,int) -> drag
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.DragSortListView$DragScrollProfile:
    float getSpeed(float,long) -> getSpeed
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.f:
    boolean mAbort -> b
    long mPrevTime -> c
    long mCurrTime -> d
    int dy -> e
    float dt -> f
    long tStart -> g
    int scrollDir -> h
    float mScrollSpeed -> i
    boolean mScrolling -> j
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    boolean isScrolling() -> isScrolling
    int getScrollDir() -> getScrollDir
    void startScrolling(int) -> startScrolling
    void stopScrolling(boolean) -> stopScrolling
    void run() -> run
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.DragSortListView$DragSortListener:
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.g:
    java.lang.StringBuilder mBuilder -> a
    java.io.File mFile -> b
    int mNumInBuffer -> d
    int mNumFlushes -> e
    boolean mTracking -> f
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    void startTracking() -> startTracking
    void appendState() -> appendState
    void flush() -> flush
    void stopTracking() -> stopTracking
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.h:
    int mDropPos -> d
    int srcPos -> e
    float mInitDeltaY -> f
    float mInitDeltaX -> g
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> onStart
    int getTargetY() -> a
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.DragSortListView$DropListener:
    void drop(int,int) -> drop
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.DragSortListView$FloatViewManager:
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.i:
    android.util.SparseIntArray mMap -> b
    java.util.ArrayList mOrder -> c
    int mMaxSize -> d
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void add(int,int) -> add
    int get(int) -> get
    void clear() -> clear
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.j:
    float mInitDragDeltaY -> d
    float mFinalDragDeltaY -> e
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.k:
    float mFloatLocX -> d
    float mFirstStartBlank -> e
    float mSecondStartBlank -> f
    int mFirstChildHeight -> g
    int mSecondChildHeight -> h
    int mFirstPos -> i
    int mSecondPos -> j
    int srcPos -> k
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.DragSortListView$RemoveListener:
    void remove(int) -> remove
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.l:
    long mStartTime -> b
    float mDurationF -> a
    float mAlpha -> d
    float mA -> e
    float mB -> f
    float mC -> g
    float mD -> h
    boolean mCanceled -> i
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    float transform(float) -> transform
    void start() -> start
    void cancel() -> cancel
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
    void run() -> run
com.mobeta.android.dslv.ResourceDragSortCursorAdapter -> com.mobeta.android.dslv.ResourceDragSortCursorAdapter:
    int mLayout -> a
    int mDropDownLayout -> b
    android.view.LayoutInflater mInflater -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
com.mobeta.android.dslv.SimpleDragSortCursorAdapter -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> b
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter mCursorToStringConverter -> c
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder mViewBinder -> d
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(android.database.Cursor,java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.SimpleFloatViewManager:
    android.graphics.Bitmap mFloatBitmap -> a
    android.widget.ImageView mImageView -> b
    int mFloatBGColor -> c
    android.widget.ListView mListView -> d
    void setBackgroundColor(int) -> setBackgroundColor
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> a
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.nineoldandroids.animation.AnimatorInflater -> com.nineoldandroids.animation.AnimatorInflater:
    int[] AnimatorSet -> a
    int[] PropertyAnimator -> b
    int[] Animator -> c
    com.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> a
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.nineoldandroids.animation.AnimatorSet,int) -> a
    com.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> a
    com.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> a
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> d
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.animation.a:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.animation.b:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.animation.AnimatorSet$Builder:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> with
    com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator) -> before
    com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator) -> after
    com.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.animation.c:
    com.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.animation.d:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.animation.e:
    com.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ArgbEvaluator -> com.nineoldandroids.animation.ArgbEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.f:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.animation.g:
    int firstValue -> g
    int lastValue -> h
    int deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.h:
    float mValue -> d
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.animation.i:
    int mValue -> d
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.nineoldandroids.animation.j:
    java.lang.Object mValue -> d
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.k:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> a
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.l:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.m:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.n:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.o:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.p:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.q:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.r:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.s:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.t:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.u:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.v:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.w:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.x:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.y:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.z:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> mProperty
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(com.nineoldandroids.util.Property,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    void setupValue(java.lang.Object,com.nineoldandroids.animation.Keyframe) -> a
    void setupStartValue(java.lang.Object) -> b
    void setupEndValue(java.lang.Object) -> c
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> d
    void init() -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> b
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.aa:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.ab:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> i
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> b
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> d
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.animation.ac:
    com.nineoldandroids.util.IntProperty mIntProperty -> i
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> g
    int mIntAnimatedValue -> h
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> b
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> d
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TimeAnimator -> com.nineoldandroids.animation.TimeAnimator:
    com.nineoldandroids.animation.TimeAnimator$TimeListener mListener -> h
    long mPreviousTime -> i
    boolean animationFrame(long) -> a
    void setTimeListener(com.nineoldandroids.animation.TimeAnimator$TimeListener) -> setTimeListener
    void animateValue(float) -> a
    void initAnimation() -> a
com.nineoldandroids.animation.TimeAnimator$TimeListener -> com.nineoldandroids.animation.TimeAnimator$TimeListener:
    void onTimeUpdate(com.nineoldandroids.animation.TimeAnimator,long,long) -> onTimeUpdate
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.nineoldandroids.animation.ValueAnimator ofObject(com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> a
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> a
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> h
    void startAnimation() -> i
    boolean delayedAnimationFrame(long) -> b
    boolean animationFrame(long) -> a
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> b
    java.lang.ThreadLocal access$100() -> c
    java.lang.ThreadLocal access$200() -> d
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> e
    java.lang.ThreadLocal access$600() -> f
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> g
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ad:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ae:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.af:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ag:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ah:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.animation.ai:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
    void setValue(java.lang.Object,float) -> setValue
    void set(java.lang.Object,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
    void setValue(java.lang.Object,int) -> setValue
    void set(java.lang.Object,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.NoSuchPropertyException -> com.nineoldandroids.util.NoSuchPropertyException:
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    com.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String) -> of
    boolean isReadOnly() -> isReadOnly
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
com.nineoldandroids.util.ReflectiveProperty -> com.nineoldandroids.util.a:
    java.lang.reflect.Method mSetter -> a
    java.lang.reflect.Method mGetter -> b
    java.lang.reflect.Field mField -> c
    boolean typesMatch(java.lang.Class,java.lang.Class) -> a
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    boolean isReadOnly() -> isReadOnly
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.ViewHelper:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.a:
    float getAlpha(android.view.View) -> a
    void setAlpha(android.view.View,float) -> a
    float getPivotX(android.view.View) -> b
    void setPivotX(android.view.View,float) -> b
    float getPivotY(android.view.View) -> c
    void setPivotY(android.view.View,float) -> c
    float getRotation(android.view.View) -> d
    void setRotation(android.view.View,float) -> d
    float getRotationX(android.view.View) -> e
    void setRotationX(android.view.View,float) -> e
    float getRotationY(android.view.View) -> f
    void setRotationY(android.view.View,float) -> f
    float getScaleX(android.view.View) -> g
    void setScaleX(android.view.View,float) -> g
    float getScaleY(android.view.View) -> h
    void setScaleY(android.view.View,float) -> h
    float getScrollX(android.view.View) -> i
    void setScrollX(android.view.View,int) -> a
    float getScrollY(android.view.View) -> j
    void setScrollY(android.view.View,int) -> b
    float getTranslationX(android.view.View) -> k
    void setTranslationX(android.view.View,float) -> i
    float getTranslationY(android.view.View) -> l
    void setTranslationY(android.view.View,float) -> j
    float getX(android.view.View) -> m
    void setX(android.view.View,float) -> k
    float getY(android.view.View) -> n
    void setY(android.view.View,float) -> l
com.nineoldandroids.view.ViewPropertyAnimator -> com.nineoldandroids.view.ViewPropertyAnimator:
    java.util.WeakHashMap ANIMATORS -> a
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> animate
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.nineoldandroids.view.b:
    java.lang.ref.WeakReference mView -> b
    long mDuration -> c
    boolean mDurationSet -> d
    long mStartDelay -> e
    boolean mStartDelaySet -> f
    android.view.animation.Interpolator mInterpolator -> g
    boolean mInterpolatorSet -> h
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> i
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> j
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> k
    java.util.HashMap mAnimatorMap -> l
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float) -> b
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> c
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.nineoldandroids.view.c:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> a
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.nineoldandroids.view.d:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.nineoldandroids.view.e:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.nineoldandroids.view.f:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.nineoldandroids.view.g:
    java.lang.ref.WeakReference mNative -> a
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> com.nineoldandroids.view.h:
    com.nineoldandroids.animation.Animator$AnimatorListener val$listener -> a
    com.nineoldandroids.view.ViewPropertyAnimatorICS this$0 -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.nineoldandroids.view.i:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> b
    java.lang.ref.WeakReference mView -> c
    long mDuration -> d
    boolean mDurationSet -> e
    long mStartDelay -> f
    boolean mStartDelaySet -> g
    android.view.animation.Interpolator mInterpolator -> h
    boolean mInterpolatorSet -> i
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> j
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> k
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> l
    java.util.HashMap mAnimatorMap -> m
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float) -> b
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> c
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.nineoldandroids.view.j:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> a
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.nineoldandroids.view.k:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.nineoldandroids.view.l:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.nineoldandroids.view.m:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> a
    java.lang.ref.WeakReference mView -> b
    android.graphics.Camera mCamera -> c
    boolean mHasPivot -> d
    float mAlpha -> e
    float mPivotX -> f
    float mPivotY -> g
    float mRotationX -> h
    float mRotationY -> i
    float mRotationZ -> j
    float mScaleX -> k
    float mScaleY -> l
    float mTranslationX -> m
    float mTranslationY -> n
    android.graphics.RectF mBefore -> o
    android.graphics.RectF mAfter -> p
    android.graphics.Matrix mTempMatrix -> q
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getPivotX() -> getPivotX
    void setPivotX(float) -> setPivotX
    float getPivotY() -> getPivotY
    void setPivotY(float) -> setPivotY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationX() -> getRotationX
    void setRotationX(float) -> setRotationX
    float getRotationY() -> getRotationY
    void setRotationY(float) -> setRotationY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void prepareForUpdate() -> a
    void invalidateAfterUpdate() -> b
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.sothree.slidinguppanel.SlidingUpPanelLayout -> com.sothree.slidinguppanel.SlidingUpPanelLayout:
    java.lang.String TAG -> a
    int[] DEFAULT_ATTRS -> b
    int mMinFlingVelocity -> c
    int mCoveredFadeColor -> d
    android.graphics.Paint mCoveredFadePaint -> e
    android.graphics.drawable.Drawable mShadowDrawable -> f
    int mPanelHeight -> g
    int mShadowHeight -> h
    int mParalaxOffset -> i
    boolean mIsSlidingUp -> j
    boolean mCanSlide -> k
    boolean mOverlayContent -> l
    android.view.View mDragView -> m
    int mDragViewResId -> n
    android.view.View mSlideableView -> o
    android.view.View mMainView -> p
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState mSlideState -> q
    float mSlideOffset -> r
    int mSlideRange -> s
    boolean mIsUnableToDrag -> t
    boolean mIsSlidingEnabled -> u
    boolean mIsUsingDragViewTouchEvents -> v
    int mScrollTouchSlop -> w
    float mInitialMotionX -> x
    float mInitialMotionY -> y
    float mAnchorPoint -> z
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener mPanelSlideListener -> A
    android.support.v4.widget.ViewDragHelper mDragHelper -> B
    boolean mFirstLayout -> C
    android.graphics.Rect mTmpRect -> D
    void onFinishInflate() -> onFinishInflate
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setPanelHeight(int) -> setPanelHeight
    int getPanelHeight() -> getPanelHeight
    int getCurrentParalaxOffset() -> getCurrentParalaxOffset
    void setPanelSlideListener(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener) -> setPanelSlideListener
    void setDragView(android.view.View) -> setDragView
    void setAnchorPoint(float) -> setAnchorPoint
    void setOverlayed(boolean) -> setOverlayed
    boolean isOverlayed() -> isOverlayed
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelExpanded(android.view.View) -> b
    void dispatchOnPanelCollapsed(android.view.View) -> c
    void dispatchOnPanelAnchored(android.view.View) -> d
    void updateObscuredViewVisibility() -> a
    void setAllChildrenVisible() -> b
    boolean hasOpaqueBackground(android.view.View) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setEnableDragViewTouchEvents(boolean) -> setEnableDragViewTouchEvents
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isDragViewUnder(int,int) -> a
    boolean expandPane(android.view.View,int,float) -> a
    boolean collapsePane(android.view.View,int) -> a
    int getSlidingTop() -> getSlidingTop
    boolean collapsePane() -> collapsePane
    boolean expandPane() -> expandPane
    boolean expandPane(float) -> expandPane
    boolean isExpanded() -> isExpanded
    boolean isAnchored() -> isAnchored
    boolean isSlideable() -> isSlideable
    boolean isPaneVisible() -> isPaneVisible
    void showPane() -> showPane
    void hidePane() -> hidePane
    void onPanelDragged(int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> a
    float access$200(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> b
    int access$300(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> c
    android.support.v4.widget.ViewDragHelper access$400(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> d
    float access$500(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> e
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState access$600(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> f
    android.view.View access$700(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> g
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState access$602(com.sothree.slidinguppanel.SlidingUpPanelLayout,com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState) -> a
    void access$800(com.sothree.slidinguppanel.SlidingUpPanelLayout,int) -> a
    boolean access$900(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> h
    int access$1000(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> i
    int access$1100(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> j
com.sothree.slidinguppanel.SlidingUpPanelLayout$1 -> com.sothree.slidinguppanel.a:
    int[] $SwitchMap$com$sothree$slidinguppanel$SlidingUpPanelLayout$SlideState -> a
com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback -> com.sothree.slidinguppanel.b:
    com.sothree.slidinguppanel.SlidingUpPanelLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams -> com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams:
    int[] ATTRS -> c
    boolean slideable -> a
    boolean dimWhenOffset -> b
com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener -> com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelAnchored(android.view.View) -> onPanelAnchored
com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState -> com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState mSlideState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState$1 -> com.sothree.slidinguppanel.c:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sothree.slidinguppanel.SlidingUpPanelLayout$SimplePanelSlideListener -> com.sothree.slidinguppanel.SlidingUpPanelLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelAnchored(android.view.View) -> onPanelAnchored
com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState -> com.sothree.slidinguppanel.d:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState EXPANDED -> a
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState COLLAPSED -> b
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState ANCHORED -> c
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState[] $VALUES -> d
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState[] values() -> values
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SlideState valueOf(java.lang.String) -> valueOf
